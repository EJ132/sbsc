[{"/Users/ejgonzalez/Documents/sbsc/src/index.js":"1","/Users/ejgonzalez/Documents/sbsc/src/reportWebVitals.js":"2","/Users/ejgonzalez/Documents/sbsc/src/App.js":"3","/Users/ejgonzalez/Documents/sbsc/src/shopContext.js":"4","/Users/ejgonzalez/Documents/sbsc/src/Components/Navigation/Navigation.js":"5","/Users/ejgonzalez/Documents/sbsc/src/Components/Services/Services.js":"6","/Users/ejgonzalez/Documents/sbsc/src/Components/ServiceTeamSBSC/ServiceTeamSBSC.js":"7","/Users/ejgonzalez/Documents/sbsc/src/Components/PersonalSessions/PersonalSessions.js":"8","/Users/ejgonzalez/Documents/sbsc/src/Components/Memberships/Memberships.js":"9","/Users/ejgonzalez/Documents/sbsc/src/Components/MeetPrep/MeetPrep.js":"10","/Users/ejgonzalez/Documents/sbsc/src/Components/PhysicalTherapy/PhysicalTherapy.js":"11","/Users/ejgonzalez/Documents/sbsc/src/Components/ContactUs/ContactUs.js":"12","/Users/ejgonzalez/Documents/sbsc/src/Components/SchedulePt/SchedulePt.js":"13","/Users/ejgonzalez/Documents/sbsc/src/Components/Product/Product.js":"14","/Users/ejgonzalez/Documents/sbsc/src/Components/Cart/Cart.js":"15","/Users/ejgonzalez/Documents/sbsc/src/Components/Schedule1on1/Schedule1on1.js":"16","/Users/ejgonzalez/Documents/sbsc/src/Components/Checkout/Checkout.js":"17","/Users/ejgonzalez/Documents/sbsc/src/Components/Category/Category.js":"18","/Users/ejgonzalez/Documents/sbsc/src/Components/Home.js":"19","/Users/ejgonzalez/Documents/sbsc/src/Components/Shop/Shop.js":"20","/Users/ejgonzalez/Documents/sbsc/src/Components/Square/Square.js":"21","/Users/ejgonzalez/Documents/sbsc/src/Components/Memberships/MembershipOption.js":"22","/Users/ejgonzalez/Documents/sbsc/src/Components/Square/PaymentForm.js":"23","/Users/ejgonzalez/Documents/sbsc/src/Components/Map.js":"24","/Users/ejgonzalez/Documents/sbsc/src/Components/Checkout/Checkout_Billing.js":"25","/Users/ejgonzalez/Documents/sbsc/src/Components/Checkout/Checkout_Payment.js":"26","/Users/ejgonzalez/Documents/sbsc/src/Components/Checkout/Checkout_Details.js":"27","/Users/ejgonzalez/Documents/sbsc/src/Helpers/shopHelper.js":"28","/Users/ejgonzalez/Documents/sbsc/src/ApiContext.js":"29","/Users/ejgonzalez/Documents/sbsc/src/Helpers/categoriesHelper.js":"30","/Users/ejgonzalez/Documents/sbsc/src/Components/Shop/ShopSandbox.js":"31","/Users/ejgonzalez/Documents/sbsc/src/Components/Checkout/Success.js":"32","/Users/ejgonzalez/Documents/sbsc/src/Components/Checkout/Checkout_Shipping.js":"33","/Users/ejgonzalez/Documents/sbsc/src/Components/Banner/Banner.js":"34"},{"size":674,"mtime":1617339766000,"results":"35","hashOfConfig":"36"},{"size":362,"mtime":1617242105000,"results":"37","hashOfConfig":"36"},{"size":4636,"mtime":1626244633268,"results":"38","hashOfConfig":"36"},{"size":1924,"mtime":1623222811337,"results":"39","hashOfConfig":"36"},{"size":2448,"mtime":1626243484565,"results":"40","hashOfConfig":"36"},{"size":2477,"mtime":1617588681000,"results":"41","hashOfConfig":"36"},{"size":2882,"mtime":1622515467000,"results":"42","hashOfConfig":"36"},{"size":2568,"mtime":1622515961000,"results":"43","hashOfConfig":"36"},{"size":3571,"mtime":1620106484000,"results":"44","hashOfConfig":"36"},{"size":2790,"mtime":1622919971862,"results":"45","hashOfConfig":"36"},{"size":2599,"mtime":1622515604000,"results":"46","hashOfConfig":"36"},{"size":1895,"mtime":1617588464000,"results":"47","hashOfConfig":"36"},{"size":492,"mtime":1622515720000,"results":"48","hashOfConfig":"36"},{"size":9592,"mtime":1625502047747,"results":"49","hashOfConfig":"36"},{"size":5948,"mtime":1623222816402,"results":"50","hashOfConfig":"36"},{"size":495,"mtime":1622515914000,"results":"51","hashOfConfig":"36"},{"size":7768,"mtime":1626244070334,"results":"52","hashOfConfig":"36"},{"size":6829,"mtime":1626243382638,"results":"53","hashOfConfig":"36"},{"size":6222,"mtime":1622517403000,"results":"54","hashOfConfig":"36"},{"size":4431,"mtime":1626243648308,"results":"55","hashOfConfig":"36"},{"size":812,"mtime":1626240680508,"results":"56","hashOfConfig":"36"},{"size":1828,"mtime":1620106566000,"results":"57","hashOfConfig":"36"},{"size":3285,"mtime":1626241528498,"results":"58","hashOfConfig":"36"},{"size":1235,"mtime":1617588551000,"results":"59","hashOfConfig":"36"},{"size":5918,"mtime":1623271947530,"results":"60","hashOfConfig":"36"},{"size":1696,"mtime":1626240554688,"results":"61","hashOfConfig":"36"},{"size":9586,"mtime":1626241718980,"results":"62","hashOfConfig":"36"},{"size":5774,"mtime":1626238807595,"results":"63","hashOfConfig":"36"},{"size":82,"mtime":1622879269437,"results":"64","hashOfConfig":"36"},{"size":532,"mtime":1622919430627,"results":"65","hashOfConfig":"36"},{"size":4217,"mtime":1623222850684,"results":"66","hashOfConfig":"36"},{"size":1619,"mtime":1624505259099,"results":"67","hashOfConfig":"36"},{"size":1672,"mtime":1625790143813,"results":"68","hashOfConfig":"36"},{"size":562,"mtime":1626242899791,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yja36v",{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150"},"/Users/ejgonzalez/Documents/sbsc/src/index.js",[],"/Users/ejgonzalez/Documents/sbsc/src/reportWebVitals.js",[],"/Users/ejgonzalez/Documents/sbsc/src/App.js",["151","152"],"import \"./App.css\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Home from \"./Components/Home\";\nimport Navigation from \"./Components/Navigation/Navigation\";\nimport Memberships from \"./Components/Memberships/Memberships\";\nimport Services from \"./Components/Services/Services\";\nimport ServiceTeamSBSC from \"./Components/ServiceTeamSBSC/ServiceTeamSBSC\";\nimport PhysicalTherapy from \"./Components/PhysicalTherapy/PhysicalTherapy\";\nimport PersonalSessions from \"./Components/PersonalSessions/PersonalSessions\";\nimport MeetPrep from \"./Components/MeetPrep/MeetPrep\";\nimport ContactUs from \"./Components/ContactUs/ContactUs\";\nimport Shop from \"./Components/Shop/Shop\";\n\nimport ShopProvider from \"./shopContext\";\nimport ApiContext from \"./ApiContext\";\nimport Cart from \"./Components/Cart/Cart\";\nimport Checkout from \"./Components/Checkout/Checkout\";\nimport Square from \"./Components/Square/Square\";\nimport { Component } from \"react\";\nimport SchedulePt from \"./Components/SchedulePt/SchedulePt\";\nimport Schedule1on1 from \"./Components/Schedule1on1/Schedule1on1\";\nimport Category from \"./Components/Category/Category\";\nimport Product from \"./Components/Product/Product\";\nimport ShopHelper from \"./Helpers/shopHelper\";\nimport ShopSandbox from \"./Components/Shop/ShopSandbox\";\nimport Success from \"./Components/Checkout/Success\";\nimport Banner from \"./Components/Banner/Banner\";\n\nexport default class App extends Component {\n  state = {\n    load: false,\n    products: [],\n    toggleBanner: true,\n  };\n\n  async componentDidMount() {\n    if (localStorage.getItem(\"toggleBanner\") === \"false\") {\n      this.toggleBanner();\n    }\n\n    let sqPaymentScript = document.createElement(\"script\");\n    // sandbox: https://js.squareupsandbox.com/v2/paymentform\n    // production: https://js.squareup.com/v2/paymentform\n    sqPaymentScript.src = \"https://js.squareupsandbox.com/v2/paymentform\";\n    sqPaymentScript.type = \"text/javascript\";\n    sqPaymentScript.async = false;\n    sqPaymentScript.onload = () => {\n      this.setState({\n        load: true,\n      });\n    };\n    document.getElementsByTagName(\"head\")[0].appendChild(sqPaymentScript);\n    let products = await ShopHelper.getAllProducts();\n    this.setState({\n      products: products,\n    });\n  }\n\n  squarePayment = this.state.load ? (\n    <Square paymentForm={window.SqPaymentForm} />\n  ) : null;\n\n  toggleBanner = () => {\n    this.setState({\n      toggleBanner: false,\n    });\n    localStorage.setItem(\"toggleBanner\", \"false\");\n  };\n\n  render() {\n    const value = {\n      products: this.state.products,\n    };\n    return (\n      <div className=\"App\">\n        <ShopProvider>\n          <Navigation />\n          <Banner\n            toggle={this.state.toggleBanner}\n            onClick={this.toggleBanner}\n          />\n          <Switch>\n            {/* <Route path='/panda' component={Panda}/>  \n            <Route path='/gorilla' component={Gorilla}/>               \n            <Route path='/rhino' component={Rhino}/> \n            <Route path='/seaTurtle' component={SeaTurtle}/>   */}\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/memberships\" component={Memberships} />\n            <Route exact path=\"/services\" component={Services} />\n            <Route\n              exact\n              path=\"/services/team-sbsc\"\n              component={ServiceTeamSBSC}\n            />\n            <Route\n              exact\n              path=\"/services/physical-therapy\"\n              component={PhysicalTherapy}\n            />\n            <Route\n              exact\n              path=\"/services/personal-sessions\"\n              component={PersonalSessions}\n            />\n            <Route exact path=\"/services/meet-prep\" component={MeetPrep} />\n            <Route exact path=\"/services/schedule-pt\" component={SchedulePt} />\n            <Route\n              exact\n              path=\"/services/schedule-one-on-one\"\n              component={Schedule1on1}\n            />\n            <Route exact path=\"/shop\" component={Shop} />\n            <Route exact path=\"/shopSandbox\" component={ShopSandbox} />\n            <Route exact path=\"/shop/:category\" component={Category} />\n            <Route exact path=\"/shop/product/:id\" component={Product} />\n            <Route exact path=\"/cart\" component={Cart} />\n            <Route exact path=\"/contact\" component={ContactUs} />\n            <Route\n              exact\n              path=\"/checkout\"\n              render={(props) => <Checkout {...props} />}\n            />\n            <Route exact path=\"/success/:receipt\" component={Success} />\n          </Switch>\n        </ShopProvider>\n      </div>\n    );\n  }\n}\n","/Users/ejgonzalez/Documents/sbsc/src/shopContext.js",[],"/Users/ejgonzalez/Documents/sbsc/src/Components/Navigation/Navigation.js",["153"],"import axios from \"axios\";\nimport { React, Component } from \"react\";\nimport { Navbar, Nav, Container, NavDropdown } from \"react-bootstrap\";\nimport \"./Navigation.css\";\nimport ShopHelper from \"../../Helpers/shopHelper\";\n\nexport default class Navigation extends Component {\n  async componentDidMount() {\n    let categories = await ShopHelper.getAllProducts();\n    console.log(categories);\n  }\n\n  render() {\n    return (\n      <>\n        <Navbar\n          collapseOnSelect\n          sticky=\"top\"\n          style={{\n            backgroundImage: \"linear-gradient(to right, #8f6d06, #d39e00)\",\n          }}\n          expand=\"lg\"\n          bg=\"dark\"\n          variant=\"dark\"\n        >\n          <Container>\n            <Navbar.Brand href=\"/\">South Bay Strength Company</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n              <Nav>\n                <Nav.Link href=\"/\">Home</Nav.Link>\n                <Nav.Link href=\"/memberships\">Memberships</Nav.Link>\n                <Nav.Link href=\"/services\">Services</Nav.Link>\n                <Nav.Link href=\"/contact\">Contact</Nav.Link>\n                {/* <Nav.Link href=\"/shop\">Shop</Nav.Link> */}\n                <NavDropdown title=\"Shop\" id=\"navbarScrollingDropdown\">\n                  <NavDropdown.Item href=\"/shop\">Shop</NavDropdown.Item>\n                  <NavDropdown.Item href=\"/shop/mens\">Men's</NavDropdown.Item>\n                  <NavDropdown.Item href=\"/shop/womens\">\n                    Women's\n                  </NavDropdown.Item>\n                  <NavDropdown.Item href=\"/shop/sweatshirts\">\n                    Sweatshirts\n                  </NavDropdown.Item>\n                  <NavDropdown.Item href=\"/shop/unisex\">\n                    Unisex\n                  </NavDropdown.Item>\n                  <NavDropdown.Item href=\"/shop/accessories\">\n                    Accessories\n                  </NavDropdown.Item>\n                  {/* <NavDropdown.Item href=\"/shop/clinics\">Clinics</NavDropdown.Item> */}\n                  {/* <NavDropdown.Divider /> */}\n                  <NavDropdown.Item href=\"/shop/pets\">Pets</NavDropdown.Item>\n                </NavDropdown>\n                {/* <Nav.Link href=\"/\">My Account</Nav.Link> */}\n                <Nav.Link href=\"/cart\">Cart</Nav.Link>\n              </Nav>\n            </Navbar.Collapse>\n          </Container>\n        </Navbar>\n      </>\n    );\n  }\n}\n","/Users/ejgonzalez/Documents/sbsc/src/Components/Services/Services.js",[],"/Users/ejgonzalez/Documents/sbsc/src/Components/ServiceTeamSBSC/ServiceTeamSBSC.js",[],"/Users/ejgonzalez/Documents/sbsc/src/Components/PersonalSessions/PersonalSessions.js",[],"/Users/ejgonzalez/Documents/sbsc/src/Components/Memberships/Memberships.js",[],"/Users/ejgonzalez/Documents/sbsc/src/Components/MeetPrep/MeetPrep.js",[],"/Users/ejgonzalez/Documents/sbsc/src/Components/PhysicalTherapy/PhysicalTherapy.js",[],"/Users/ejgonzalez/Documents/sbsc/src/Components/ContactUs/ContactUs.js",[],"/Users/ejgonzalez/Documents/sbsc/src/Components/SchedulePt/SchedulePt.js",[],"/Users/ejgonzalez/Documents/sbsc/src/Components/Product/Product.js",["154","155","156","157"],"import React from 'react';\nimport { Container, Row, Col, Image, Button, Spinner} from 'react-bootstrap'\nimport { Component } from 'react';\nimport axios from 'axios'\nimport { ShopContext } from '../../shopContext'\nimport './Product.css'\nimport ShopHelper from '../../Helpers/shopHelper'\n\nexport default class Product extends Component {\n\n    static contextType = ShopContext;\n\n    state = {\n        loading: false,\n        count: 1,\n        products: [],\n        categoryId: \"\",\n        productId: \"\",\n        variations: [],\n        selectedVariation: \"\",\n        isVariationSelected: false,\n        itemId: \"\",\n    }\n\n    async componentDidMount() {\n        let products = await ShopHelper.getAllProducts();\n        this.setState({\n            products: products\n          })\n        const paramId = this.props.match.params.id\n        let res = await axios({\n            method: 'GET',\n            validateStatus: (status) => {\n                return true; // I'm always returning true, you may want to do it depending on the status received\n            },\n            url: `http://localhost:3001/items/product/${paramId}`\n        }).then((response) => {\n            this.setState({\n                item: response.data.items,\n                categoryId: response.data.items.object.itemData.categoryId,\n                productId: response.data.items.object.id,\n                variations: response.data.items.object.itemData.variations\n            })\n            console.log(response)\n        }).catch(err => console.log(err))\n    }\n\n    displayExtras = () => {\n        // console.log(this.state.products)\n        // console.log(this.state.categoryId)\n        let results = [];\n        this.state.products.map(item => {\n            if(item.catalogItemObj.itemData.categoryId === this.state.categoryId && item.catalogItemObj.id !== this.state.productId) {\n                console.log(item)\n                results.push(item)\n            }\n        })\n        console.log(results)\n        return results.map((item, index) => {\n            if(index < 2){\n                return(\n                    <Col key={index} className=\"item-hover\" onClick={() => this.navigateTo(`/shop/product/${item.catalogItemObj.id}`)}>\n                        <Image src={item.catalogImageObj.imageData.url} className=\"product-extra-image text-center\" />\n                        <h1 className=\"h3\">{item.catalogItemObj.itemData.name}</h1>\n                    </Col>\n                )\n            }\n        })\n    }\n\n    displayVariations = () => {\n        console.log(this.state.variations)\n        return this.state.variations.map((item, index) => {\n            return(\n                <Col key={index} className={this.state.selectedVariation === item.itemVariationData.name ? \"variationOption variationActive\" : \"variationOption\"} \n                    onClick={() => { \n                        this.setState({ \n                            selectedVariation: item.itemVariationData.name, \n                            isVariationSelected: true,\n                            selectedVariationData: item\n                        }, () => {\n                            console.log(this.state.selectedVariation)\n                        }) \n                    }}>\n                    <h1 className=\"h5 text-center\">{item.itemVariationData.name}</h1>\n                </Col>\n            )\n        })\n    }\n\n    navigateTo = (path) => {\n        window.location.pathname = path\n    }\n\n    addItemAnimation = (item_id) => {\n        let button = document.getElementById(item_id);\n        button.classList.remove(\"btn-outline-warning\");\n        button.classList.add(\"btn-success\");\n        button.innerText = 'Added +'\n        setTimeout(() => {\n            button.classList.remove(\"btn-success\");\n            button.classList.add(\"btn-outline-warning\");\n            button.innerText = 'Add to Cart'\n        }, 2000)\n    }\n\n    addItemToCart = (item_id, id) => {\n        console.log(item_id)\n        console.log(item_id.id)\n        if(!localStorage.getItem('checkout-id')){\n            axios({\n                method: 'POST',\n                url: 'http://localhost:3001/create-order',\n                data: {\n                    itemVarId: item_id.id,\n                    itemQuantity: \"1\",\n                }\n            }).then((response) => {\n                console.log(response.data.order)\n                this.setState({\n                    orderId: response.data.order.order.id,\n                    itemId: item_id.id\n                }, () => {\n                    this.addItemAnimation(id)\n                    localStorage.setItem(\"checkout-id\", response.data.order.order.id)\n                    localStorage.setItem(\"checkout-version\", response.data.order.order.version.toString())\n                })\n            }).catch(err => console.log(err))\n        } else {\n            this.setState({\n                version: parseInt(localStorage.getItem('checkout-version')),\n                orderId: localStorage.getItem('checkout-id'),\n                itemId: item_id.id,\n            }, () => {\n                console.log(`item id: ${item_id.id}, order id: ${this.state.orderId}, version: ${this.state.version}`)\n                this.reqItemAddToCart(item_id.id, this.state.orderId, this.state.version)\n                this.addItemAnimation(id)\n            })\n        }\n    }\n\n    reqItemAddToCart = (item_id, order_id, version) => {\n        axios({\n            method: 'POST',\n            url: 'http://localhost:3001/cart/update-order-add-item',\n            data: {\n                orderId: order_id,\n                version: version,\n                itemVarId: item_id,\n                itemQuantity: \"1\",\n            }\n        }).then((response) => {\n            console.log(response)\n            localStorage.setItem(\"checkout-version\", response.data.order.order.version.toString())\n        }).catch(err => console.log(err))\n    };\n\n    render() {\n        return (\n            <Container className=\"py-5\">\n                {!this.state.item ? <Spinner className=\"spinner\" animation=\"grow\" variant=\"warning\" /> :\n                    <Container fluid className=\"py-5\">\n                        <Row>\n                            <Col>\n                                <Image src={this.state.item.relatedObjects[2].imageData.url} style={{objectFit: 'cover'}} className=\"productImg\" />\n                            </Col>\n                            <Col>\n                                <Row>\n                                    <h1 className=\"h2 text-left\">{this.state.item.object.itemData.name}</h1>\n                                </Row>\n                                <Row>\n                                    <h1 className=\"h3 text-left\">${this.state.item.object.itemData.variations[0].itemVariationData.priceMoney.amount.toFixed(2)}</h1>\n                                </Row>\n                                <Row>\n                                    <h1 className=\"h4 text-left\">Options</h1>\n                                </Row>\n                                <Row>\n                                    {this.state.variations.length > 0 ? this.displayVariations() : null}\n                                </Row>\n                                <Row className=\"pt-2\">\n                                    <h1 className=\"h4 text-left\">Quantity</h1>\n                                </Row>\n                                <Row>\n                                    <div className=\"quantityBox w-50 p-3 my-3\">\n                                        <div className=\"quantitySub\" onClick={() => {\n                                            if(this.state.count < 2){\n\n                                            } else {\n                                                this.setState({ count: this.state.count - 1})\n                                            }\n                                            }}><h1 className=\"h4\">-</h1></div>\n                                        <div className=\"quantityCount\"><h1 className=\"h4\">{this.state.count}</h1></div>\n                                        <div className=\"quantityAdd\" onClick={() => this.setState({ count: this.state.count + 1})}><h1 className=\"h4\">+</h1></div>\n                                    </div>\n                                </Row>\n                                <Row className=\"my-3\">\n                                    {this.state.isVariationSelected ? \n                                        <button className=\"btn btn-info\" id=\"add_to_cart_btn\" onClick={() => this.addItemToCart(this.state.selectedVariationData, \"add_to_cart_btn\")} >ADD TO CART</button>\n                                    :\n                                        <button className=\"btn btn-secondary\" disabled id=\"add_to_cart_btn\" >ADD TO CART</button>\n                                    }\n                                </Row>\n                                <Row>\n                                    <h1 className=\"h4 text-left\">{this.state.item.object.itemData.description}</h1>\n                                </Row>\n                            </Col>\n                        </Row>\n                        <Row className=\"mt-5 pt-5 divider\">\n                            <Col>\n                                <h1 className=\"h3 text-center\">You may also like</h1>\n                            </Col>\n                        </Row>\n                        <Row>\n                            {this.state.products.length > 0 ? this.displayExtras() : null}\n                        </Row>\n                    </Container>\n                }\n            </Container>\n        )\n    }\n}","/Users/ejgonzalez/Documents/sbsc/src/Components/Cart/Cart.js",["158"],"import React, { Component } from 'react'\nimport {Container, Row, Col, Image, Button} from 'react-bootstrap'\nimport axios from 'axios'\nimport './Cart.css'\nimport {ShopContext} from '../../shopContext'\nimport ShopHelper from '../../Helpers/shopHelper'\n\nexport default class Cart extends Component {\n\n    static contextType = ShopContext;\n\n    state = {\n        current_cart: [],\n        order_details: \"\",\n    }\n\n    async componentDidMount(){\n        let cart_items = await ShopHelper.getCart();\n        console.log(cart_items)\n        if(cart_items && cart_items.orderInfo && cart_items.orderInfo.lineItems){\n            this.setState({\n                current_cart: cart_items.orderInfo.lineItems,\n                order_details: cart_items\n            })\n        } else {\n            return;\n        }\n    }\n\n    clearCart = () => {\n        ShopHelper.clearCart();\n        window.location.reload();\n    }\n\n    navigateTo = (path) => {\n        // console.log(window.location.pathname)\n        window.location.pathname = path\n    }\n\n    removeItem = (itemId, orderId) => {\n        console.log(orderId)\n        axios({\n            method: 'POST',\n            url: 'http://localhost:3001/cart/update-order-remove-item',\n            data: {\n                itemUid: itemId,\n                orderId\n            }\n        }).then((response) => {\n            console.log(response)\n            this.setState({\n                current_cart: response.data.updatedOrder.order.lineItems ? response.data.updatedOrder.order.lineItems : []\n            });\n            localStorage.setItem(\"checkout-version\", response.data.updatedOrder.order.version.toString())\n\n        }).catch(err => console.log(err))\n    }\n    \n    render(){\n        return(\n            <Container className=\"pb-5\">\n                <Row className=\"pt-5\">\n                    <Col>\n                        <h1 className=\"h1 text-left\" style={{color: \"white\"}}>Cart</h1>\n                    </Col>\n                    <Col></Col>\n                </Row>\n                \n                {this.state.current_cart.map(product => \n                    <Row key={product.name} className=\"my-4\">\n                        {/* <Col sm={3}>\n                            <Image src={product.images[0].url} className=\"cart-image text-center\" height=\"100px\" width=\"200px\" />\n                        </Col> */}\n                        <Col>\n                            <Row>\n                                <Col xs={12} md={6} lg={6}>\n                                    <h1 className=\"text-left h2\">{product.name} - {product.variationName}</h1>\n                                </Col>\n                                <Col xs={12} md={2} lg={2}>\n                                    <h1 className=\"h4 remove\" onClick={() => {this.removeItem(product.uid, this.state.order_details.orderInfo.id)}}>Remove</h1>\n                                </Col>  \n                                <Col xs={12} md={2} lg={2}>\n                                    <h1 className=\"h4 quantity\" >Quantity: 1</h1>\n                                </Col>\n                                <Col xs={12} md={2} lg={2}>\n                                    <h1 className=\"h3 amount\" >${product.variationTotalPriceMoney.amount}</h1>\n                                </Col>\n                            </Row>\n                            \n                        </Col>\n                    </Row>\n                )}\n                {/* <Row className=\"mt-5\">\n                    <Col lg={4}></Col>\n                    <Col lg={4}>\n                        <h1 className=\"h3 text-center\">Cart Total</h1>\n                        <Row>\n                            <Col>\n                                <h1 className=\"h4 text-right\">Subtotal</h1>\n                            </Col>\n                            <Col>\n                                <h1 className=\"h4 text-left\">{`$${this.state.order_details === \"\" ? 0 : (this.state.order_details.orderInfo.totalMoney.amount - this.state.order_details.orderInfo.totalTaxMoney.amount).toFixed(2) }`}</h1>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <h1 className=\"h4 text-right\">Shipping</h1>\n                            </Col>\n                            <Col>\n                                <h1 className=\"h4 text-left\">{`$${this.state.order_details === \"\" ? 0 : 4.00.toFixed(2)}`}</h1>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <h1 className=\"h4 text-right\">Tax</h1>\n                            </Col>\n                            <Col>\n                                <h1 className=\"h4 text-left\">{`$${this.state.order_details === \"\" ? 0 : (this.state.order_details.orderInfo.taxes[0].appliedMoney.amount).toFixed(2) }`}</h1>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <h1 className=\"h4 text-right\">Total</h1>\n                            </Col>\n                            <Col>\n                                <h1 className=\"h4 text-left\">{`$${this.state.order_details === \"\" ? 0 : ((this.state.order_details.orderInfo.totalMoney.amount + 4.00)).toFixed(2) }`}</h1>\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col lg={4}></Col>\n                </Row> */}\n                <Row className=\"mt-3\">\n                    <Col>\n                        <Button variant=\"outline-danger mx-1\" onClick={() => this.clearCart()}>Clear Cart</Button>\n                        <Button variant=\"outline-light mx-1\" onClick={() => this.navigateTo('/checkout')}>Checkout</Button>\n                    </Col>\n                </Row>\n                \n            </Container>\n        )\n    }\n    \n}","/Users/ejgonzalez/Documents/sbsc/src/Components/Schedule1on1/Schedule1on1.js",[],"/Users/ejgonzalez/Documents/sbsc/src/Components/Checkout/Checkout.js",["159","160","161","162","163","164","165"],"import react, { Component } from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Image,\n  Button,\n  Form,\n  ToggleButton,\n} from \"react-bootstrap\";\nimport \"./Checkout.css\";\nimport ShopHelper from \"../../Helpers/shopHelper\";\nimport Checkout_Details from \"./Checkout_Details\";\nimport Checkout_Payment from \"./Checkout_Payment\";\nimport Checkout_Billing from \"./Checkout_Billing\";\nimport Checkout_Shipping from \"./Checkout_Shipping\";\n// var addressValidator = require('address-validator');\n// var Address = addressValidator.Address;\n// var _ = require('underscore');\n\nexport default class Checkout extends Component {\n  state = {\n    current_cart: [],\n    order_details: \"\",\n    validated: false,\n    personal_information: [],\n    shippingOption: true,\n    checkout_step: 999,\n    finalOrderAmount: 0,\n  };\n\n  async componentDidMount() {\n    let cart_items = await ShopHelper.getCart();\n    if (cart_items.length !== 0) {\n      this.setState({\n        current_cart: cart_items.orderInfo.lineItems,\n        order_details: cart_items,\n        totalAmount: cart_items.orderInfo,\n        finalOrderAmount: cart_items.orderInfo.totalMoney.amount.toFixed(2),\n        checkout_step: 0,\n      });\n\n      // const shippingDetails = await ShopHelper.getShippingRateDetails(localStorage.getItem('shipping-id'));\n      // console.log(shippingDetails)\n      console.log(this.state);\n    } else {\n      return;\n    }\n  }\n\n  updateCheckoutStep = (step) => {\n    this.setState({\n      checkout_step: step,\n    });\n  };\n\n  updateShippingOption = (valid) => {\n    if (valid) {\n      this.setState({\n        shippingOption: true,\n      });\n    } else {\n      this.setState({\n        shippingOption: false,\n      });\n    }\n  };\n\n  getCurrentStep = () => {\n    if (this.state.checkout_step === 999) {\n      return;\n    }\n\n    console.log(this.state);\n    if (this.state.checkout_step === 0) {\n      return (\n        // eslint-disable-next-line react/jsx-pascal-case\n        <Checkout_Details\n          orderId={this.state.order_details.orderInfo.id}\n          updateShippingOption={this.updateShippingOption}\n          updateCheckout={this.updateCheckoutStep}\n          totalAmount={\n            this.state.order_details.orderInfo\n              ? (\n                  this.state.order_details.orderInfo.totalMoney.amount +\n                  4.5 +\n                  this.state.order_details.orderInfo.totalMoney.amount * 0.085\n                ).toFixed(2)\n              : null\n          }\n        />\n      );\n    } else {\n      return (\n        // eslint-disable-next-line react/jsx-pascal-case\n        <Checkout_Payment\n          shipping={this.state.shippingOption}\n          totalAmount={\n            this.state.order_details.orderInfo\n              ? this.state.order_details.orderInfo.totalMoney.amount.toFixed(2)\n              : null\n          }\n        />\n      );\n    }\n  };\n\n  render() {\n    return (\n      <Container className=\"pb-5\">\n        <Row className=\"pt-5\">\n          <Col>\n            <h1 className=\"h1 text-left\" style={{ color: \"white\" }}>\n              Checkout\n            </h1>\n            <h1 className=\"h5 text-left\" style={{ color: \"white\" }}>\n              Hope you found everything you need!\n            </h1>\n            {/* <Button variant=\"light\" onClick={() => this.getTestCheckout()}>Checkout</Button> */}\n            {/* <Button variant=\"light\" onClick={() => this.addItemToCart()}>Add Item</Button> */}\n          </Col>\n          {/* <Col></Col> */}\n        </Row>\n        <Container className=\"checkout-container p-3 my-3\">\n          <Row>\n            <Col lg={6}>{this.getCurrentStep()}</Col>\n            {/* ORDER DETAILS */}\n            <Col>\n              <Container id=\"checkout-items\">\n                {this.state.current_cart.map((product) => (\n                  <Row key={product.name} className=\"my-4\">\n                    {/* <Col sm={3}>\n                                        <Image src={product.images[0].url} className=\"cart-image text-center\" height=\"100px\" width=\"200px\" />\n                                    </Col> */}\n                    <Col>\n                      <Row>\n                        <Col>\n                          <h1 className=\"text-left h2\">\n                            {product.name} - {product.variationName}\n                          </h1>\n                        </Col>\n                        <Col xs={12} lg={4}>\n                          <h1 className=\"h4 quantity text-right pr-2\">\n                            Quantity: 1\n                          </h1>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col xs={12} lg={12}>\n                          <h1 className=\"h3 amount text-right pr-2\">\n                            ${product.variationTotalPriceMoney.amount}\n                          </h1>\n                        </Col>\n                      </Row>\n                    </Col>\n                  </Row>\n                ))}\n              </Container>\n              <Container id=\"checkout-total\">\n                <Row>\n                  <Col xs={6} md={8} lg={9}>\n                    <h1 className=\"h5 text-right\">Subtotal</h1>\n                  </Col>\n                  <Col xs={6} md={4} lg={3}>\n                    <h1 className=\"h5 text-left\">{`$${\n                      this.state.order_details === \"\"\n                        ? null\n                        : (\n                            this.state.order_details.orderInfo.totalMoney\n                              .amount -\n                            this.state.order_details.orderInfo.totalTaxMoney\n                              .amount\n                          ).toFixed(2)\n                    }`}</h1>\n                  </Col>\n                </Row>\n                {/* <Row>\n                                <Col md={8} lg={9}>\n                                    <h1 className=\"h5 text-right\">Shipping</h1>\n                                </Col>\n                                <Col>\n                                    <h1 className=\"h5 text-left\">{`$${this.state.order_details === \"\" ? 0 : 4.00.toFixed(2)}`}</h1>\n                                </Col>\n                            </Row> */}\n                {this.state.shippingOption && (\n                  <Row>\n                    <Col xs={6} md={8} lg={9}>\n                      <h1 className=\"h5 text-right\">Shipping</h1>\n                    </Col>\n                    <Col xs={6} md={4} lg={3}>\n                      <h1 className=\"h5 text-left\">$7.00</h1>\n                    </Col>\n                  </Row>\n                )}\n                <Row>\n                  <Col xs={6} md={8} lg={9}>\n                    <h1 className=\"h5 text-right\">Tax</h1>\n                  </Col>\n                  <Col xs={6} md={4} lg={3}>\n                    <h1 className=\"h5 text-left\">{`$${\n                      this.state.order_details === \"\"\n                        ? null\n                        : this.state.order_details.orderInfo.taxes[0].appliedMoney.amount.toFixed(\n                            2\n                          )\n                    }`}</h1>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col xs={6} md={8} lg={9}>\n                    <h1 className=\"h5 text-right\">Total</h1>\n                  </Col>\n                  <Col xs={6} md={4} lg={3}>\n                    <h1 className=\"h5 text-left\">{`$${\n                      this.state.shippingOption\n                        ? (parseInt(this.state.finalOrderAmount) + 7).toFixed(2)\n                        : this.state.finalOrderAmount\n                    }`}</h1>\n                  </Col>\n                </Row>\n              </Container>\n            </Col>\n          </Row>\n        </Container>\n      </Container>\n    );\n  }\n}\n","/Users/ejgonzalez/Documents/sbsc/src/Components/Category/Category.js",["166","167","168","169","170","171","172"],"import { render } from \"@testing-library/react\";\nimport React from \"react\";\nimport { Container, Row, Col, Image, Button, Spinner } from \"react-bootstrap\";\nimport { Component } from \"react\";\nimport axios from \"axios\";\nimport ShopHelper from \"../../Helpers/shopHelper\";\nimport CategoryHelper from \"../../Helpers/categoriesHelper\";\nimport \"./Category.css\";\n\nexport default class Category extends Component {\n  state = {\n    // items: [],\n    images: [],\n    filters: [],\n    filterBy: \"\",\n    categoryId: \"\",\n  };\n\n  async componentDidMount() {\n    let paramId = this.props.match.params.category;\n    let filters = CategoryHelper.filter(function (item) {\n      if (item.name === paramId) {\n        // console.log(item)\n        return item;\n      }\n    });\n    this.setState(\n      {\n        filters: filters,\n      },\n      () => {\n        // console.log(this.state.filters)\n      }\n    );\n    let res = await axios({\n      method: \"GET\",\n      validateStatus: (status) => {\n        return true; // I'm always returning true, you may want to do it depending on the status received\n      },\n      url: `http://localhost:3001/items/${paramId}`,\n    })\n      .then((response) => {\n        console.log(response);\n        this.setState({\n          items: response.data.items,\n          categoryId: response.data.items.items[0].itemData.categoryId,\n        });\n        return response.data.items;\n      })\n      .catch((err) => console.log(err));\n    let products = await ShopHelper.getImages();\n    this.setState({\n      images: products.data.items,\n    });\n    // this.state.items.items.map(item => console.log(item.itemData))\n  }\n\n  displayCategoryItems = (item) => {\n    // console.log(item)\n\n    let imageUrl = this.state.images.filter(function (image) {\n      if (image.id === item.imageId) {\n        return image;\n      }\n    });\n\n    if (imageUrl.length > 0) {\n      imageUrl = imageUrl[0].imageData.url;\n    } else {\n      imageUrl = \"\";\n    }\n\n    return (\n      <Col\n        xs={6}\n        md={6}\n        lg={3}\n        key={item.id}\n        className=\"item mb-5\"\n        onClick={() => this.handleItemClick(item.id)}\n      >\n        <Image\n          src={imageUrl}\n          style={{ objectFit: \"cover\" }}\n          className=\"itemImg\"\n        />\n        <h1 className=\"itemTitle h4 mt-3 text-center\">{item.itemData.name}</h1>\n        {/* <Button variant=\"outline-warning\" id={product.catalogItemObj.itemData.variations[0].id} onClick={() => this.addItemToCart(product.catalogItemObj.itemData.variations[0].id)}>Add to Cart</Button> */}\n      </Col>\n    );\n  };\n\n  handleItemClick = (id) => {\n    // console.log(id)\n    this.navigateTo(`/shop/product/${id}`);\n  };\n\n  navigateTo = (path) => {\n    // console.log(window.location.pathname)\n    window.location.pathname = path;\n  };\n\n  filterBy = async (item) => {\n    if (item === \"clear\") {\n      this.setState(\n        {\n          filterBy: \"\",\n        },\n        async () => {\n          let res = await axios({\n            method: \"GET\",\n            validateStatus: (status) => {\n              return true; // I'm always returning true, you may want to do it depending on the status received\n            },\n            url: `http://localhost:3001/items/${paramId}`,\n          })\n            .then((response) => {\n              console.log(response);\n              this.setState({\n                items: response.data.items,\n                categoryId: response.data.items.items[0].itemData.categoryId,\n              });\n              return response.data.items;\n            })\n            .catch((err) => console.log(err));\n          return;\n        }\n      );\n    }\n\n    // console.log(this.state.items)\n    let paramId = this.props.match.params.category;\n    this.setState(\n      {\n        filterBy: item,\n      },\n      async () => {\n        let id = {\n          paramId: paramId,\n          filterText: this.state.filterBy,\n        };\n        let res = await axios({\n          method: \"POST\",\n          validateStatus: (status) => {\n            return true; // I'm always returning true, you may want to do it depending on the status received\n          },\n          url: `http://localhost:3001/items/product/search/${this.state.categoryId}/${id.filterText}`,\n        })\n          .then((response) => {\n            console.log(response);\n            this.setState({\n              items: response.data.items,\n            });\n            // return response.data.items\n          })\n          .catch((err) => console.log(err));\n      }\n    );\n  };\n\n  render() {\n    return (\n      <Container\n        fluid\n        style={{ paddingLeft: \"5%\", paddingRight: \"5%\", paddingBottom: \"5%\" }}\n      >\n        {this.state.items && this.state.items.items ? (\n          <>\n            <Row>\n              <Col></Col>\n              <Col>\n                <h1 className=\"categoryHeader h1 py-3\">\n                  {this.props.match.params.category}\n                </h1>\n              </Col>\n              <Col></Col>\n            </Row>\n            <Row>\n              <Col xs={12} md={3} lg={2}>\n                <Row>\n                  <Col xs={12} lg={12}>\n                    <h1 className=\"filterTitle bold text-left\">FILTERS</h1>\n                  </Col>\n                  {this.state.filters.length > 0\n                    ? this.state.filters[0].filters.map((item) => {\n                        return (\n                          <Col xs={12} lg={12}>\n                            {this.state.filterBy === item ? (\n                              <h1\n                                onClick={async () =>\n                                  await this.filterBy(\"clear\")\n                                }\n                                className=\"h4 my-2 selected filterText text-left\"\n                              >\n                                {item}\n                              </h1>\n                            ) : (\n                              <h1\n                                onClick={async () => await this.filterBy(item)}\n                                className=\"h4 my-2 filterText text-left\"\n                              >\n                                {item}\n                              </h1>\n                            )}\n                          </Col>\n                        );\n                      })\n                    : null}\n                </Row>\n              </Col>\n              <Col>\n                <Row>\n                  {this.state.items && this.state.items.items\n                    ? this.state.items.items.map((item) =>\n                        this.displayCategoryItems(item)\n                      )\n                    : null}\n                </Row>\n              </Col>\n            </Row>\n          </>\n        ) : (\n          <Spinner className=\"spinner\" animation=\"grow\" variant=\"warning\" />\n        )}\n      </Container>\n    );\n  }\n}\n","/Users/ejgonzalez/Documents/sbsc/src/Components/Home.js",[],"/Users/ejgonzalez/Documents/sbsc/src/Components/Shop/Shop.js",["173"],"import React, { Component } from \"react\";\nimport { Container, Row, Col, Image, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { ShopContext } from \"../../shopContext\";\nimport ShopHelper from \"../../Helpers/shopHelper\";\n\nexport default class Shop extends Component {\n  static contextType = ShopContext;\n\n  state = {\n    products: [],\n    orderId: \"\",\n    version: 0,\n  };\n\n  async componentDidMount() {\n    const context = this.context.getAllProducts();\n    let products = await ShopHelper.getAllProducts();\n    console.log(products);\n    this.setState({\n      products: products,\n    });\n  }\n\n  getTestCheckout = () => {\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:3001/create-order\",\n      data: {\n        // itemVarId: \"UKVTZMEYHL3FJELIYNR47ICX\",\n        // itemQuantity: \"1\",\n      },\n    })\n      .then((response) => {\n        console.log(response.data.order);\n        this.setState({\n          orderId: response.data.order.order.id,\n        });\n        console.log(this.state);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  addItemAnimation = (item_id) => {\n    let button = document.getElementById(item_id);\n    button.classList.remove(\"btn-outline-warning\");\n    button.classList.add(\"btn-success\");\n    button.innerText = \"Added +\";\n    setTimeout(() => {\n      button.classList.remove(\"btn-success\");\n      button.classList.add(\"btn-outline-warning\");\n      button.innerText = \"Add to Cart\";\n    }, 2000);\n  };\n\n  addItemToCart = (item_id) => {\n    if (!localStorage.getItem(\"checkout-id\")) {\n      axios({\n        method: \"POST\",\n        url: \"http://localhost:3001/create-order\",\n        data: {\n          itemVarId: item_id,\n          itemQuantity: \"1\",\n        },\n      })\n        .then((response) => {\n          console.log(response.data.order);\n          this.setState({\n            orderId: response.data.order.order.id,\n          });\n          this.addItemAnimation(item_id);\n          localStorage.setItem(\"checkout-id\", response.data.order.order.id);\n        })\n        .catch((err) => console.log(err));\n    } else {\n      this.setState(\n        {\n          version: this.state.version + 1,\n          orderId: localStorage.getItem(\"checkout-id\"),\n        },\n        () => {\n          console.log(\n            `item id: ${item_id}, order id: ${this.state.orderId}, version: ${this.state.version}`\n          );\n          this.context.addItemToCart(\n            item_id,\n            this.state.orderId,\n            this.state.version\n          );\n          this.addItemAnimation(item_id);\n        }\n      );\n    }\n  };\n\n  navigateTo = (path) => {\n    window.location.pathname = path;\n  };\n\n  render() {\n    return (\n      <Container className=\"pb-5\">\n        <Row className=\"pt-5\">\n          <Col>\n            <h1 className=\"h1 text-left\" style={{ color: \"white\" }}>\n              Shop\n            </h1>\n            <h1 className=\"h5 text-left\" style={{ color: \"white\" }}>\n              Browse all SBSC merch.\n            </h1>\n            {/* <Button variant=\"light\" onClick={() => this.getTestCheckout()}>Checkout</Button> */}\n            {/* <Button variant=\"light\" onClick={() => this.addItemToCart()}>Add Item</Button> */}\n          </Col>\n          <Col></Col>\n        </Row>\n        <Row xs={1} md={2} lg={4} className=\"pt-3\">\n          {this.state.products.map((product) => (\n            <Col\n              onClick={() =>\n                this.navigateTo(`/shop/product/${product.catalogItemObj.id}`)\n              }\n              xs={12}\n              md={6}\n              lg={4}\n              key={product.catalogItemObj.id}\n              className=\"my-3 item\"\n            >\n              <Image\n                src={product.catalogImageObj.imageData.url}\n                style={{ objectFit: \"cover\" }}\n                width=\"350\"\n                height=\"350\"\n              />\n              <h1 className=\"h2 text-left\">\n                {product.catalogItemObj.itemData.name}\n              </h1>\n              <Button\n                variant=\"outline-warning\"\n                id={product.catalogItemObj.itemData.variations[0].id}\n                onClick={() =>\n                  this.addItemToCart(\n                    product.catalogItemObj.itemData.variations[0].id\n                  )\n                }\n              >\n                Add to Cart\n              </Button>\n            </Col>\n          ))}\n        </Row>\n      </Container>\n    );\n  }\n}\n","/Users/ejgonzalez/Documents/sbsc/src/Components/Square/Square.js",[],"/Users/ejgonzalez/Documents/sbsc/src/Components/Memberships/MembershipOption.js",[],"/Users/ejgonzalez/Documents/sbsc/src/Components/Square/PaymentForm.js",[],"/Users/ejgonzalez/Documents/sbsc/src/Components/Map.js",[],"/Users/ejgonzalez/Documents/sbsc/src/Components/Checkout/Checkout_Billing.js",["174","175","176","177"],"import react, { Component } from 'react'\nimport {Container, Row, Col, Image, Button, Form, ToggleButton} from 'react-bootstrap'\n\nexport default class Checkout_Billing extends Component {\n\n    state = {\n        validated: false,\n        billing_information: [],\n        shippingOption: \"\",\n    }\n\n    handleSubmit = (event) => {\n        const form = event.currentTarget\n        console.log(event.currentTarget[1])\n        if (form.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        } else {\n            this.props.updateCheckout(2)\n        }\n\n        let billingInformation = []\n        for(let i = 0; i < event.currentTarget.length - 1; i++){\n            let keyPair = {[event.currentTarget[i].placeholder]: event.currentTarget[i].value}\n            billingInformation.push(keyPair)\n        }\n        this.setState({\n            validated: true,\n            billing_information: [...billingInformation]\n        }, () => { \n            console.log(this.state.billing_information);\n        })\n        event.preventDefault();\n    }\n\n    toggleShipping = (shippingOption) => {\n        let el = document.getElementById(`inline-${shippingOption}`)\n        if(shippingOption === \"Shipping\"){\n            document.getElementById(`inline-Local Pickup`).checked = false;\n            this.setState({\n                shippingOption: shippingOption\n            })\n        } else {\n            document.getElementById(`inline-Shipping`).checked = false;\n            this.setState({\n                shippingOption: shippingOption\n            })\n        }\n\n    }\n\n    render(){\n        return(\n            <Container>\n                <Row className=\"my-3\">\n                    <Col><h1 className=\"text-center checkout-title nonActive\">1. Shipping</h1></Col>\n                    <Col><h1 className=\"text-center checkout-title active\">2. Billing</h1></Col>\n                    <Col><h1 className=\"text-center checkout-title nonActive\">3. Payment</h1></Col>\n                </Row>\n                <Form>\n                    <div key={`inline-checkbox`} className=\"mb-3\">\n                        {[\"Same as Shipping\", \"Different\" ].map((shippingType) => (\n                            <Form.Check inline label={`${shippingType}`} onClick={() => this.toggleShipping(`${shippingType}`)} type={\"checkbox\"} id={`inline-${shippingType}`} />\n                        ))}\n                    </div>\n                </Form>\n                {/* <Row>\n                    <Col className=\"text-center\">\n                        <h1 className=\"h5\">Defaults to different.</h1>\n                    </Col>\n                </Row> */}\n                <Form noValidate validated={this.state.validated} onSubmit={this.handleSubmit}>\n                    <Form.Row>\n                        <Form.Group as={Col} className=\"text-left\" controlId=\"validationCustom01\">\n                            <Form.Label className=\"form-label\">Full name</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                placeholder=\"Full name\"\n                            />\n                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group as={Col} className=\"text-left\" controlId=\"validationCustom02\">\n                            <Form.Label className=\"form-label\">Address</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                placeholder=\"Address\"\n                            />\n                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group as={Col} className=\"text-left\" controlId=\"validationCustom03\">\n                            <Form.Label className=\"form-label\">City</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                placeholder=\"City\"\n                            />\n                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group as={Col} className=\"text-left\" md=\"6\" controlId=\"validationCustom04\">\n                            <Form.Label className=\"form-label\">State</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                placeholder=\"State\"\n                            />\n                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group as={Col} className=\"text-left\" md=\"6\" controlId=\"validationCustom05\">\n                            <Form.Label className=\"form-label\">Zipcode</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                placeholder=\"Zipcode\"\n                            />\n                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n                    <Row className=\"py-2\">\n                        <Col className=\"text-right\">\n                            <Button type=\"submit\" variant=\"outline-light\">Next</Button>\n                        </Col>\n                    </Row>\n                </Form>\n            </Container>\n        )\n    }\n}","/Users/ejgonzalez/Documents/sbsc/src/Components/Checkout/Checkout_Payment.js",["178","179","180","181","182"],"import react, { Component } from 'react';\nimport { Container, Row, Col, Image, Button, Form, ToggleButton } from 'react-bootstrap'\nimport Square from '../../Components/Square/Square';\n\nexport default class Checkout_Payment extends Component {\n\n    render() {\n        return (\n            <Container className=\"py-5\">\n                <Row className=\"my-3\">\n                    <Col><h1 className=\"text-center checkout-title nonActive\">1. Information</h1></Col>\n                    {/* <Col xs={1} md={1} lg={1} className=\"circle-seperator\">{String.fromCharCode(9675)}</Col> */}\n                    {/* <Col xs={1} md={1} lg={1} className=\"circle-seperator\">{String.fromCharCode(9675)}</Col> */}\n                    {/* <Col><h1 className=\"text-center checkout-title nonActive\">2. Shipping</h1></Col> */}\n                    <Col><h1 className=\"text-center checkout-title active\">2. Payment</h1></Col>\n                </Row>\n                <Row>\n                    <Square paymentForm={window.SqPaymentForm} shipping={this.props.shipping} totalAmount={this.props.totalAmount} />\n                </Row>\n                {/* <div id=\"form-container\">\n                    <div id=\"sq-card-number\"></div>\n                    <div class=\"third\" id=\"sq-expiration-date\"></div>\n                    <div class=\"third\" id=\"sq-cvv\"></div>\n                    <div class=\"third\" id=\"sq-postal-code\"></div>\n                    <button id=\"sq-creditcard\" class=\"button-credit-card\" onclick=\"onGetCardNonce(event)\">Pay $1.00</button>\n                </div> */}\n                {/* <Square paymentForm={ window.SqPaymentForm } totalAmount={this.props.totalAmount}/> */}\n            </Container>\n        )\n    }\n}","/Users/ejgonzalez/Documents/sbsc/src/Components/Checkout/Checkout_Details.js",["183","184","185","186","187"],"import react, { Component } from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Image,\n  Button,\n  Form,\n  ToggleButton,\n} from \"react-bootstrap\";\nimport Square from \"../../Components/Square/Square\";\nimport ShopHelper from \"../../Helpers/shopHelper\";\n\nexport default class Checkout_Details extends Component {\n  state = {\n    validated: false,\n    personal_information: [],\n    shippingOption: \"Shipping\",\n    validatedAddressError: false,\n  };\n\n  async componentDidMount() {\n    // console.log(this.props)\n    document.getElementById(`inline-Local Pickup`).checked = false;\n    document.getElementById(`inline-Shipping`).checked = true;\n  }\n\n  showValidateAddressError = () => {\n    this.setState({\n      validatedAddressError: true,\n    });\n    setTimeout(() => {\n      this.setState({\n        validatedAddressError: false,\n      });\n    }, 5000);\n  };\n\n  handleSubmit = async (event) => {\n    const form = event.currentTarget;\n    event.preventDefault();\n\n    let personalInformation = [];\n    for (let i = 0; i < event.currentTarget.length - 1; i++) {\n      let keyPair = {\n        [event.currentTarget[i].name]: event.currentTarget[i].value,\n      };\n      personalInformation.push(keyPair);\n    }\n\n    console.log(personalInformation);\n\n    if (form.checkValidity() === false) {\n      this.showValidateAddressError();\n      event.stopPropagation();\n    } else {\n      await ShopHelper.verifyAddress(personalInformation).then(async (res) => {\n        if (res === false) {\n          this.showValidateAddressError();\n        } else {\n          await ShopHelper.setOrderAddress(\n            this.props.orderId,\n            personalInformation\n          );\n          localStorage.setItem(\n            \"checkout-version\",\n            (parseInt(localStorage.getItem(\"checkout-version\")) + 1).toString()\n          );\n          const shippingRates = await ShopHelper.getShippingRates(\n            personalInformation\n          );\n          console.log(shippingRates);\n          localStorage.setItem(\"shipping-id\", shippingRates.shippingId);\n          localStorage.setItem(\"rate-id\", shippingRates.rateId);\n          this.updateCheckoutState();\n        }\n      });\n    }\n  };\n\n  updateCheckoutState = () => {\n    this.props.updateCheckout(1);\n  };\n\n  toggleShipping = (shippingOption) => {\n    let el = document.getElementById(`inline-${shippingOption}`);\n    if (shippingOption === \"Shipping\") {\n      document.getElementById(`inline-Local Pickup`).checked = false;\n      this.setState({\n        shippingOption: shippingOption,\n      });\n      this.props.updateShippingOption(true);\n    } else {\n      document.getElementById(`inline-Shipping`).checked = false;\n      this.setState({\n        shippingOption: shippingOption,\n      });\n      this.props.updateShippingOption(false);\n    }\n  };\n\n  render() {\n    return (\n      <Container>\n        <Row className=\"my-3\">\n          <Col>\n            <h1 className=\"text-center checkout-title active\">\n              1. Information\n            </h1>\n          </Col>\n          {/* <Col><h1 className=\"text-center checkout-title nonActive\">2. Shipping</h1></Col> */}\n          <Col>\n            <h1 className=\"text-center checkout-title nonActive\">2. Payment</h1>\n          </Col>\n        </Row>\n        <Form>\n          <div key={`inline-checkbox`} className=\"mb-3\">\n            {[\"Shipping\", \"Local Pickup\"].map((shippingType) => (\n              <Form.Check\n                inline\n                label={`${shippingType}`}\n                onClick={() => this.toggleShipping(`${shippingType}`)}\n                type={\"checkbox\"}\n                id={`inline-${shippingType}`}\n              />\n            ))}\n          </div>\n        </Form>\n        {this.state.shippingOption === \"Local Pickup\" ? (\n          <Row>\n            <Col>\n              <h1 className=\"text-center\">Please proceed.</h1>\n            </Col>\n            <Col xs={12} lg={12} className=\"text-right\">\n              <Button\n                type=\"button\"\n                onClick={() => this.props.updateCheckout(2)}\n                variant=\"outline-light\"\n              >\n                Next\n              </Button>\n            </Col>\n          </Row>\n        ) : (\n          <Form\n            noValidate\n            validated={this.state.validated}\n            onSubmit={this.handleSubmit}\n          >\n            <Form.Row>\n              <Form.Group\n                as={Col}\n                md=\"6\"\n                className=\"text-left\"\n                controlId=\"validationCustom01\"\n              >\n                <Form.Label className=\"form-label\">First name</Form.Label>\n                <Form.Control\n                  required\n                  type=\"firstName\"\n                  placeholder=\"First name\"\n                  name=\"firstName\"\n                />\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group\n                as={Col}\n                md=\"6\"\n                className=\"text-left\"\n                controlId=\"validationCustom01\"\n              >\n                <Form.Label className=\"form-label\">Last name</Form.Label>\n                <Form.Control\n                  required\n                  type=\"lastName\"\n                  placeholder=\"Last name\"\n                  name=\"lastName\"\n                />\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group\n                as={Col}\n                className=\"text-left\"\n                controlId=\"validationCustom02\"\n              >\n                <Form.Label className=\"form-label\">Address</Form.Label>\n                <Form.Control\n                  required\n                  type=\"address\"\n                  placeholder=\"Address\"\n                  name=\"addressLine1\"\n                />\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group\n                as={Col}\n                className=\"text-left\"\n                controlId=\"validationCustom03\"\n              >\n                <Form.Label className=\"form-label\">City</Form.Label>\n                <Form.Control\n                  required\n                  type=\"city\"\n                  placeholder=\"City\"\n                  name=\"city\"\n                />\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group\n                as={Col}\n                className=\"text-left\"\n                md=\"6\"\n                controlId=\"validationCustom04\"\n              >\n                <Form.Label className=\"form-label\">State</Form.Label>\n                <Form.Control\n                  required\n                  type=\"state\"\n                  placeholder=\"State\"\n                  name=\"state\"\n                  minLength=\"2\"\n                  maxLength=\"2\"\n                />\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group\n                as={Col}\n                className=\"text-left\"\n                md=\"6\"\n                controlId=\"validationCustom05\"\n              >\n                <Form.Label className=\"form-label\">Zipcode</Form.Label>\n                <Form.Control\n                  required\n                  type=\"text\"\n                  placeholder=\"Zipcode\"\n                  name=\"zip\"\n                  minLength=\"5\"\n                  maxLength=\"5\"\n                  autoComplete=\"new-password\"\n                />\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group\n                as={Col}\n                className=\"text-left\"\n                md=\"6\"\n                controlId=\"validationCustom05\"\n              >\n                <Form.Label className=\"form-label\">Phone</Form.Label>\n                <Form.Control\n                  required\n                  type=\"phone\"\n                  placeholder=\"Phone\"\n                  name=\"phoneNumber\"\n                  minLength=\"10\"\n                  maxLength=\"10\"\n                />\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group\n                as={Col}\n                className=\"text-left\"\n                md=\"6\"\n                controlId=\"validationCustom05\"\n              >\n                <Form.Label className=\"form-label\">Email</Form.Label>\n                <Form.Control\n                  required\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  name=\"emailAddress\"\n                />\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              </Form.Group>\n            </Form.Row>\n            {this.state.validatedAddressError ? (\n              <Row>\n                <Col>\n                  <h1 className=\"h4 text-center\" style={{ color: \"red\" }}>\n                    Please enter a valid address\n                  </h1>\n                </Col>\n              </Row>\n            ) : null}\n            <Row className=\"py-2\">\n              <Col className=\"text-right\">\n                <Button type=\"submit\" variant=\"outline-light\">\n                  Next\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        )}\n      </Container>\n    );\n  }\n}\n","/Users/ejgonzalez/Documents/sbsc/src/Helpers/shopHelper.js",[],"/Users/ejgonzalez/Documents/sbsc/src/ApiContext.js",[],"/Users/ejgonzalez/Documents/sbsc/src/Helpers/categoriesHelper.js",[],"/Users/ejgonzalez/Documents/sbsc/src/Components/Shop/ShopSandbox.js",[],"/Users/ejgonzalez/Documents/sbsc/src/Components/Checkout/Success.js",["188","189","190","191","192"],"import react, { Component } from 'react';\nimport {Container, Row, Col, Image, Button, Form, ToggleButton} from 'react-bootstrap'\nimport ShopHelper from '../../Helpers/shopHelper'\n\nexport default class Success extends Component {\n\n    state = {\n        payment: {},\n        paymentId: ''\n    }\n\n    async componentDidMount() {\n        const paramId = this.props.match.params.receipt\n        console.log('receipt id: ' + paramId)\n        let paymentDetails = await ShopHelper.retrieveOrder(paramId);\n        console.log(paymentDetails.data.result)\n        this.setState({\n            payment: paymentDetails.data.result,\n            paymentId: paymentDetails.data.result.payment.id\n        })\n    }\n\n    render() {\n        return(\n            <Container>\n                <Row className=\"mt-5\">\n                    <Col>\n                        <h1 className=\"h4 text-center\">Thank you for shopping with SBSC!</h1>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <h1 className=\"h3 text-center\">{this.props.result}</h1>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <h1 className=\"h3 text-center\">Receipt ID: <span className=\"h4\">{this.state.paymentId}</span></h1>\n                    </Col>\n                </Row>\n                <Row className=\"my-3\">\n                    <Col>\n                        <h1 className=\"h5 text-center\">Receipt will also be sent to your email.</h1>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}","/Users/ejgonzalez/Documents/sbsc/src/Components/Checkout/Checkout_Shipping.js",["193","194","195","196"],"import react, { Component } from 'react'\nimport { Container, Row, Col, Image, Button, Form, ToggleButton } from 'react-bootstrap'\nimport Square from '../../Components/Square/Square';\nimport ShopHelper from '../../Helpers/shopHelper';\n\nexport default class Checkout_Shipping extends Component {\n\n    state = {\n\n    }\n\n    async componentDidMount() {\n        // console.log(this.props)\n        const shippingDetails = await ShopHelper.getShippingRateDetails(localStorage.getItem('shipping-id'));\n        console.log(shippingDetails)\n        // await ShopHelper.getShippingRates();\n    }\n\n    render() {\n        return (\n            <Container>\n                <Row className=\"my-3\">\n                    <Col><h1 className=\"text-center checkout-title nonActive\">1. Information</h1></Col>\n                    <Col><h1 className=\"text-center checkout-title active\">2. Shipping</h1></Col>\n                    <Col><h1 className=\"text-center checkout-title nonActive\">3. Payment</h1></Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <h1 className=\"text-center h4\">Please select a shipping option below: </h1>\n                    </Col>\n                </Row>\n                <Form noValidate validated={this.state.validated} onSubmit={this.handleSubmit}>\n                    <Form.Row>\n\n                    </Form.Row>\n                    <Row className=\"py-2\">\n                        <Col className=\"text-right\">\n                            <Button type=\"submit\" variant=\"outline-light\">Next</Button>\n                        </Col>\n                    </Row>\n                </Form>\n            </Container>\n        )\n    }\n}","/Users/ejgonzalez/Documents/sbsc/src/Components/Banner/Banner.js",["197"],"import { React, Component } from \"react\";\nimport { Container, Card, Row, Col } from \"react-bootstrap\";\nimport \"./Banner.css\";\n\nexport default class Banner extends Component {\n  render() {\n    return (\n      <Container\n        fluid\n        className={this.props.toggle ? \"showBanner\" : \"hideBanner\"}\n      >\n        <Row>\n          <Col>\n            <h1 className=\"h3 text-center\">Grand Opening August 14 - 15</h1>\n            <h1 className=\"h5 text-center\" onClick={this.props.onClick}>Close</h1>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n",{"ruleId":"198","severity":1,"message":"199","line":15,"column":8,"nodeType":"200","messageId":"201","endLine":15,"endColumn":18},{"ruleId":"198","severity":1,"message":"202","line":71,"column":11,"nodeType":"200","messageId":"201","endLine":71,"endColumn":16},{"ruleId":"198","severity":1,"message":"203","line":1,"column":8,"nodeType":"200","messageId":"201","endLine":1,"endColumn":13},{"ruleId":"198","severity":1,"message":"204","line":2,"column":38,"nodeType":"200","messageId":"201","endLine":2,"endColumn":44},{"ruleId":"198","severity":1,"message":"205","line":31,"column":13,"nodeType":"200","messageId":"201","endLine":31,"endColumn":16},{"ruleId":"206","severity":1,"message":"207","line":52,"column":38,"nodeType":"208","messageId":"209","endLine":52,"endColumn":40},{"ruleId":"206","severity":1,"message":"210","line":59,"column":42,"nodeType":"208","messageId":"211","endLine":59,"endColumn":44},{"ruleId":"198","severity":1,"message":"212","line":2,"column":30,"nodeType":"200","messageId":"201","endLine":2,"endColumn":35},{"ruleId":"198","severity":1,"message":"213","line":1,"column":8,"nodeType":"200","messageId":"201","endLine":1,"endColumn":13},{"ruleId":"198","severity":1,"message":"212","line":6,"column":3,"nodeType":"200","messageId":"201","endLine":6,"endColumn":8},{"ruleId":"198","severity":1,"message":"204","line":7,"column":3,"nodeType":"200","messageId":"201","endLine":7,"endColumn":9},{"ruleId":"198","severity":1,"message":"214","line":8,"column":3,"nodeType":"200","messageId":"201","endLine":8,"endColumn":7},{"ruleId":"198","severity":1,"message":"215","line":9,"column":3,"nodeType":"200","messageId":"201","endLine":9,"endColumn":15},{"ruleId":"198","severity":1,"message":"216","line":15,"column":8,"nodeType":"200","messageId":"201","endLine":15,"endColumn":24},{"ruleId":"198","severity":1,"message":"217","line":16,"column":8,"nodeType":"200","messageId":"201","endLine":16,"endColumn":25},{"ruleId":"198","severity":1,"message":"218","line":1,"column":10,"nodeType":"200","messageId":"201","endLine":1,"endColumn":16},{"ruleId":"198","severity":1,"message":"204","line":3,"column":38,"nodeType":"200","messageId":"201","endLine":3,"endColumn":44},{"ruleId":"206","severity":1,"message":"219","line":21,"column":41,"nodeType":"220","messageId":"211","endLine":21,"endColumn":50},{"ruleId":"198","severity":1,"message":"205","line":35,"column":9,"nodeType":"200","messageId":"201","endLine":35,"endColumn":12},{"ruleId":"206","severity":1,"message":"219","line":61,"column":45,"nodeType":"220","messageId":"211","endLine":61,"endColumn":54},{"ruleId":"198","severity":1,"message":"205","line":110,"column":15,"nodeType":"200","messageId":"201","endLine":110,"endColumn":18},{"ruleId":"198","severity":1,"message":"205","line":142,"column":13,"nodeType":"200","messageId":"201","endLine":142,"endColumn":16},{"ruleId":"198","severity":1,"message":"221","line":17,"column":11,"nodeType":"200","messageId":"201","endLine":17,"endColumn":18},{"ruleId":"198","severity":1,"message":"213","line":1,"column":8,"nodeType":"200","messageId":"201","endLine":1,"endColumn":13},{"ruleId":"198","severity":1,"message":"212","line":2,"column":30,"nodeType":"200","messageId":"201","endLine":2,"endColumn":35},{"ruleId":"198","severity":1,"message":"215","line":2,"column":51,"nodeType":"200","messageId":"201","endLine":2,"endColumn":63},{"ruleId":"198","severity":1,"message":"222","line":37,"column":13,"nodeType":"200","messageId":"201","endLine":37,"endColumn":15},{"ruleId":"198","severity":1,"message":"213","line":1,"column":8,"nodeType":"200","messageId":"201","endLine":1,"endColumn":13},{"ruleId":"198","severity":1,"message":"212","line":2,"column":31,"nodeType":"200","messageId":"201","endLine":2,"endColumn":36},{"ruleId":"198","severity":1,"message":"204","line":2,"column":38,"nodeType":"200","messageId":"201","endLine":2,"endColumn":44},{"ruleId":"198","severity":1,"message":"214","line":2,"column":46,"nodeType":"200","messageId":"201","endLine":2,"endColumn":50},{"ruleId":"198","severity":1,"message":"215","line":2,"column":52,"nodeType":"200","messageId":"201","endLine":2,"endColumn":64},{"ruleId":"198","severity":1,"message":"213","line":1,"column":8,"nodeType":"200","messageId":"201","endLine":1,"endColumn":13},{"ruleId":"198","severity":1,"message":"212","line":6,"column":3,"nodeType":"200","messageId":"201","endLine":6,"endColumn":8},{"ruleId":"198","severity":1,"message":"215","line":9,"column":3,"nodeType":"200","messageId":"201","endLine":9,"endColumn":15},{"ruleId":"198","severity":1,"message":"223","line":11,"column":8,"nodeType":"200","messageId":"201","endLine":11,"endColumn":14},{"ruleId":"198","severity":1,"message":"222","line":86,"column":9,"nodeType":"200","messageId":"201","endLine":86,"endColumn":11},{"ruleId":"198","severity":1,"message":"213","line":1,"column":8,"nodeType":"200","messageId":"201","endLine":1,"endColumn":13},{"ruleId":"198","severity":1,"message":"212","line":2,"column":30,"nodeType":"200","messageId":"201","endLine":2,"endColumn":35},{"ruleId":"198","severity":1,"message":"204","line":2,"column":37,"nodeType":"200","messageId":"201","endLine":2,"endColumn":43},{"ruleId":"198","severity":1,"message":"214","line":2,"column":45,"nodeType":"200","messageId":"201","endLine":2,"endColumn":49},{"ruleId":"198","severity":1,"message":"215","line":2,"column":51,"nodeType":"200","messageId":"201","endLine":2,"endColumn":63},{"ruleId":"198","severity":1,"message":"213","line":1,"column":8,"nodeType":"200","messageId":"201","endLine":1,"endColumn":13},{"ruleId":"198","severity":1,"message":"212","line":2,"column":31,"nodeType":"200","messageId":"201","endLine":2,"endColumn":36},{"ruleId":"198","severity":1,"message":"215","line":2,"column":52,"nodeType":"200","messageId":"201","endLine":2,"endColumn":64},{"ruleId":"198","severity":1,"message":"223","line":3,"column":8,"nodeType":"200","messageId":"201","endLine":3,"endColumn":14},{"ruleId":"198","severity":1,"message":"224","line":2,"column":21,"nodeType":"200","messageId":"201","endLine":2,"endColumn":25},"no-unused-vars","'ApiContext' is defined but never used.","Identifier","unusedVar","'value' is assigned a value but never used.","'axios' is defined but never used.","'Button' is defined but never used.","'res' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'Image' is defined but never used.","'react' is defined but never used.","'Form' is defined but never used.","'ToggleButton' is defined but never used.","'Checkout_Billing' is defined but never used.","'Checkout_Shipping' is defined but never used.","'render' is defined but never used.","Array.prototype.filter() expects a value to be returned at the end of function.","FunctionExpression","'context' is assigned a value but never used.","'el' is assigned a value but never used.","'Square' is defined but never used.","'Card' is defined but never used."]