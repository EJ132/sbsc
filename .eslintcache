[{"/Users/ejgonzalez/sbsc/src/index.js":"1","/Users/ejgonzalez/sbsc/src/App.js":"2","/Users/ejgonzalez/sbsc/src/reportWebVitals.js":"3","/Users/ejgonzalez/sbsc/src/Components/Home.js":"4","/Users/ejgonzalez/sbsc/src/Components/Map.js":"5","/Users/ejgonzalez/sbsc/src/Components/Memberships/Memberships.js":"6","/Users/ejgonzalez/sbsc/src/Components/Services/Services.js":"7","/Users/ejgonzalez/sbsc/src/Components/ServiceTeamSBSC/ServiceTeamSBSC.js":"8","/Users/ejgonzalez/sbsc/src/Components/PhysicalTherapy/PhysicalTherapy.js":"9","/Users/ejgonzalez/sbsc/src/Components/PersonalSessions/PersonalSessions.js":"10","/Users/ejgonzalez/sbsc/src/Components/MeetPrep/MeetPrep.js":"11","/Users/ejgonzalez/sbsc/src/Components/Navigation/Navigation.js":"12","/Users/ejgonzalez/sbsc/src/Components/Memberships/MembershipOption.js":"13","/Users/ejgonzalez/sbsc/src/Components/ContactUs/ContactUs.js":"14","/Users/ejgonzalez/sbsc/src/Components/Shop/Shop.js":"15","/Users/ejgonzalez/sbsc/src/shopContext.js":"16","/Users/ejgonzalez/sbsc/src/Components/Cart/Cart.js":"17","/Users/ejgonzalez/sbsc/src/Helpers/shopHelper.js":"18","/Users/ejgonzalez/sbsc/src/Components/Checkout/Checkout.js":"19","/Users/ejgonzalez/sbsc/src/Components/Checkout/Checkout_Details.js":"20","/Users/ejgonzalez/sbsc/src/Components/Checkout/Checkout_Payment.js":"21","/Users/ejgonzalez/sbsc/src/Components/Checkout/Checkout_Billing.js":"22","/Users/ejgonzalez/sbsc/src/Components/Square/Square.js":"23","/Users/ejgonzalez/sbsc/src/Components/Square/PaymentForm.js":"24","/Users/ejgonzalez/sbsc/src/Components/SchedulePt/SchedulePt.js":"25","/Users/ejgonzalez/sbsc/src/Components/Schedule1on1/Schedule1on1.js":"26","/Users/ejgonzalez/sbsc/src/Components/Category/Category.js":"27","/Users/ejgonzalez/sbsc/src/Components/Product/Product.js":"28"},{"size":674,"mtime":1617339766259,"results":"29","hashOfConfig":"30"},{"size":3374,"mtime":1622701230901,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":1617242105442,"results":"32","hashOfConfig":"30"},{"size":6222,"mtime":1622517403322,"results":"33","hashOfConfig":"30"},{"size":1235,"mtime":1617588551700,"results":"34","hashOfConfig":"30"},{"size":3571,"mtime":1620106484080,"results":"35","hashOfConfig":"30"},{"size":2477,"mtime":1617588681545,"results":"36","hashOfConfig":"30"},{"size":2882,"mtime":1622515467518,"results":"37","hashOfConfig":"30"},{"size":2599,"mtime":1622515604226,"results":"38","hashOfConfig":"30"},{"size":2568,"mtime":1622515961547,"results":"39","hashOfConfig":"30"},{"size":2687,"mtime":1617588568564,"results":"40","hashOfConfig":"30"},{"size":2552,"mtime":1622692377135,"results":"41","hashOfConfig":"30"},{"size":1828,"mtime":1620106566105,"results":"42","hashOfConfig":"30"},{"size":1895,"mtime":1617588464678,"results":"43","hashOfConfig":"30"},{"size":4276,"mtime":1620965445228,"results":"44","hashOfConfig":"30"},{"size":1913,"mtime":1618414705916,"results":"45","hashOfConfig":"30"},{"size":5111,"mtime":1621577879358,"results":"46","hashOfConfig":"30"},{"size":2519,"mtime":1622691043423,"results":"47","hashOfConfig":"30"},{"size":6643,"mtime":1621575554796,"results":"48","hashOfConfig":"30"},{"size":6556,"mtime":1620966450560,"results":"49","hashOfConfig":"30"},{"size":1651,"mtime":1620966653930,"results":"50","hashOfConfig":"30"},{"size":7027,"mtime":1620966640981,"results":"51","hashOfConfig":"30"},{"size":727,"mtime":1618708355609,"results":"52","hashOfConfig":"30"},{"size":2939,"mtime":1621571861867,"results":"53","hashOfConfig":"30"},{"size":492,"mtime":1622515720757,"results":"54","hashOfConfig":"30"},{"size":495,"mtime":1622515914263,"results":"55","hashOfConfig":"30"},{"size":3588,"mtime":1622703803583,"results":"56","hashOfConfig":"30"},{"size":3144,"mtime":1622703526163,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"x9umb5",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ejgonzalez/sbsc/src/index.js",[],["121","122"],"/Users/ejgonzalez/sbsc/src/App.js",[],"/Users/ejgonzalez/sbsc/src/reportWebVitals.js",[],"/Users/ejgonzalez/sbsc/src/Components/Home.js",[],"/Users/ejgonzalez/sbsc/src/Components/Map.js",[],"/Users/ejgonzalez/sbsc/src/Components/Memberships/Memberships.js",[],"/Users/ejgonzalez/sbsc/src/Components/Services/Services.js",[],"/Users/ejgonzalez/sbsc/src/Components/ServiceTeamSBSC/ServiceTeamSBSC.js",[],"/Users/ejgonzalez/sbsc/src/Components/PhysicalTherapy/PhysicalTherapy.js",[],"/Users/ejgonzalez/sbsc/src/Components/PersonalSessions/PersonalSessions.js",[],"/Users/ejgonzalez/sbsc/src/Components/MeetPrep/MeetPrep.js",[],"/Users/ejgonzalez/sbsc/src/Components/Navigation/Navigation.js",["123"],"/Users/ejgonzalez/sbsc/src/Components/Memberships/MembershipOption.js",[],"/Users/ejgonzalez/sbsc/src/Components/ContactUs/ContactUs.js",[],"/Users/ejgonzalez/sbsc/src/Components/Shop/Shop.js",["124"],"import React, { Component } from 'react'\nimport { Container, Row, Col, Image, Button} from 'react-bootstrap'\nimport axios from 'axios'\nimport {ShopContext} from '../../shopContext'\nimport ShopHelper from '../../Helpers/shopHelper'\n\nexport default class Shop extends Component {\n\n    static contextType = ShopContext;\n\n    state = {\n        products: [],\n        orderId: \"\",\n        version: 0,\n    }\n\n    async componentDidMount(){\n        const context = this.context;\n        let products = await ShopHelper.getAllProducts();\n        console.log(products);\n        this.setState({\n            products: products\n        })\n    }\n\n    getTestCheckout = () => {\n        axios({\n            method: 'POST',\n            url: 'http://localhost:3001/create-order',\n            data: {\n                locationId: \"LZPBX0EZB9PAV\",\n                // itemVarId: \"UKVTZMEYHL3FJELIYNR47ICX\",\n                // itemQuantity: \"1\",\n            }\n        }).then((response) => {\n            console.log(response.data.order)\n            this.setState({\n                orderId: response.data.order.order.id\n            })\n            console.log(this.state)\n        }).catch(err => console.log(err))\n    }\n\n    addItemAnimation = (item_id) => {\n        let button = document.getElementById(item_id);\n        button.classList.remove(\"btn-outline-warning\");\n        button.classList.add(\"btn-success\");\n        button.innerText = 'Added +'\n        setTimeout(() => {\n            button.classList.remove(\"btn-success\");\n            button.classList.add(\"btn-outline-warning\");\n            button.innerText = 'Add to Cart'\n        }, 2000)\n    }\n\n    addItemToCart = (item_id) => {\n        if(!localStorage.getItem('checkout-id')){\n            axios({\n                method: 'POST',\n                url: 'http://localhost:3001/create-order',\n                data: {\n                    locationId: \"LZPBX0EZB9PAV\",\n                    itemVarId: item_id,\n                    itemQuantity: \"1\",\n                }\n            }).then((response) => {\n                console.log(response.data.order)\n                this.setState({\n                    orderId: response.data.order.order.id\n                })\n                this.addItemAnimation(item_id)\n                localStorage.setItem(\"checkout-id\", response.data.order.order.id)\n            }).catch(err => console.log(err))\n        } else {\n            this.setState({\n                version: this.state.version + 1,\n                orderId: localStorage.getItem('checkout-id'),\n            }, () => {\n                console.log(`item id: ${item_id}, order id: ${this.state.orderId}, version: ${this.state.version}`)\n                this.context.addItemToCart(item_id, this.state.orderId, this.state.version)\n                this.addItemAnimation(item_id)\n            })\n        }\n    }\n    \n    render(){\n        return(\n            <Container className=\"pb-5\">\n                <Row className=\"pt-5\">\n                    <Col>\n                        <h1 className=\"h1 text-left\" style={{color: \"white\"}}>Shop</h1>\n                        <h1 className=\"h5 text-left\" style={{color: \"white\"}}>Browse all SBSC merch.</h1>\n                        {/* <Button variant=\"light\" onClick={() => this.getTestCheckout()}>Checkout</Button> */}\n                        {/* <Button variant=\"light\" onClick={() => this.addItemToCart()}>Add Item</Button> */}\n                    </Col>\n                    <Col></Col>\n                </Row>\n                <Row xs={1} md={2} lg={4} className=\"pt-3\">\n                    {this.state.products.map((product) => \n                        <Col xs={12} md={6} lg={4} key={product.catalogItemObj.id} className=\"my-3\">\n                            <Image src={product.catalogImageObj.imageData.url} style={{objectFit: 'cover'}} width=\"350\" height=\"350\" />\n                            <h1 className=\"h2 text-left\">{product.catalogItemObj.itemData.name}</h1>\n                            <Button variant=\"outline-warning\" id={product.catalogItemObj.itemData.variations[0].id} onClick={() => this.addItemToCart(product.catalogItemObj.itemData.variations[0].id)}>Add to Cart</Button>\n                        </Col>\n                    )}\n                </Row>\n            </Container>\n        )\n    }\n    \n}","/Users/ejgonzalez/sbsc/src/shopContext.js",[],"/Users/ejgonzalez/sbsc/src/Components/Cart/Cart.js",["125","126"],"import React, { Component } from 'react'\nimport {Container, Row, Col, Image, Button} from 'react-bootstrap'\nimport axios from 'axios'\nimport './Cart.css'\nimport {ShopContext} from '../../shopContext'\nimport ShopHelper from '../../Helpers/shopHelper'\n\nexport default class Cart extends Component {\n\n    static contextType = ShopContext;\n\n    state = {\n        current_cart: [],\n        order_details: \"\",\n    }\n\n    async componentDidMount(){\n        let cart_items = await ShopHelper.getCart();\n        console.log(cart_items)\n        if(cart_items.length !== 0){\n            this.setState({\n                current_cart: cart_items.orderInfo.lineItems,\n                order_details: cart_items\n            })\n        } else {\n            return;\n        }\n    }\n\n    clearCart = () => {\n        ShopHelper.clearCart();\n        window.location.reload();\n    }\n\n    navigateTo = (path) => {\n        // console.log(window.location.pathname)\n        window.location.pathname = path\n    }\n    \n    render(){\n        return(\n            <Container className=\"pb-5\">\n                <Row className=\"pt-5\">\n                    <Col>\n                        <h1 className=\"h1 text-left\" style={{color: \"white\"}}>Cart</h1>\n                    </Col>\n                    <Col></Col>\n                </Row>\n                \n                {this.state.current_cart.map(product => \n                    <Row key={product.name} className=\"my-4\">\n                        {/* <Col sm={3}>\n                            <Image src={product.images[0].url} className=\"cart-image text-center\" height=\"100px\" width=\"200px\" />\n                        </Col> */}\n                        <Col>\n                            <Row>\n                                <Col xs={12} md={6} lg={6}>\n                                    <h1 className=\"text-left h2\">{product.name}</h1>\n                                </Col>\n                                <Col xs={12} md={2} lg={2}>\n                                    <h1 className=\"h4 remove\" >Remove</h1>\n                                </Col>  \n                                <Col xs={12} md={2} lg={2}>\n                                    <h1 className=\"h4 quantity\" >Quantity: 1</h1>\n                                </Col>\n                                <Col xs={12} md={2} lg={2}>\n                                    <h1 className=\"h3 amount\" >${product.variationTotalPriceMoney.amount}</h1>\n                                </Col>\n                            </Row>\n                            \n                        </Col>\n                    </Row>\n                )}\n                <Row className=\"mt-5\">\n                    <Col lg={4}></Col>\n                    <Col lg={4}>\n                        <h1 className=\"h3 text-center\">Cart Total</h1>\n                        <Row>\n                            <Col>\n                                <h1 className=\"h4 text-right\">Subtotal</h1>\n                            </Col>\n                            <Col>\n                                <h1 className=\"h4 text-left\">{`$${this.state.order_details === \"\" ? 0 : (this.state.order_details.orderInfo.totalMoney.amount - this.state.order_details.orderInfo.totalTaxMoney.amount).toFixed(2) }`}</h1>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <h1 className=\"h4 text-right\">Shipping</h1>\n                            </Col>\n                            <Col>\n                                <h1 className=\"h4 text-left\">{`$${this.state.order_details === \"\" ? 0 : 4.00.toFixed(2)}`}</h1>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <h1 className=\"h4 text-right\">Tax</h1>\n                            </Col>\n                            <Col>\n                                <h1 className=\"h4 text-left\">{`$${this.state.order_details === \"\" ? 0 : (this.state.order_details.orderInfo.totalTaxMoney.amount).toFixed(2) }`}</h1>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <h1 className=\"h4 text-right\">Total</h1>\n                            </Col>\n                            <Col>\n                                <h1 className=\"h4 text-left\">{`$${this.state.order_details === \"\" ? 0 : ((this.state.order_details.orderInfo.totalMoney.amount + 4.00)).toFixed(2) }`}</h1>\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col lg={4}></Col>\n                </Row>\n                <Row className=\"mt-3\">\n                    <Col>\n                        <Button variant=\"outline-danger mx-1\" onClick={() => this.clearCart()}>Clear Cart</Button>\n                        <Button variant=\"outline-light mx-1\" onClick={() => this.navigateTo('/checkout')}>Checkout</Button>\n                    </Col>\n                </Row>\n                \n            </Container>\n        )\n    }\n    \n}","/Users/ejgonzalez/sbsc/src/Helpers/shopHelper.js",[],"/Users/ejgonzalez/sbsc/src/Components/Checkout/Checkout.js",["127","128","129","130","131","132","133","134"],"import react, { Component } from 'react'\nimport {Container, Row, Col, Image, Button, Form, ToggleButton} from 'react-bootstrap'\nimport './Checkout.css'\nimport ShopHelper from '../../Helpers/shopHelper'\nimport Checkout_Details from './Checkout_Details'\nimport Checkout_Payment from './Checkout_Payment'\nimport Checkout_Billing from './Checkout_Billing'\n// var addressValidator = require('address-validator');\n// var Address = addressValidator.Address;\n// var _ = require('underscore');\n\nexport default class Checkout extends Component {\n\n    state = {\n        current_cart: [],\n        order_details: \"\",\n        validated: false,\n        personal_information: [],\n        shippingOption: \"\",\n        checkout_step: 0,\n    }\n\n    async componentDidMount() {\n        let cart_items = await ShopHelper.getCart();\n        if(cart_items.length !== 0){\n            this.setState({\n                current_cart: cart_items.orderInfo.lineItems,\n                order_details: cart_items,\n                totalAmount: cart_items.orderInfo\n            })\n            console.log(this.state)\n        } else {\n            return;\n        }\n    }\n\n    updateCheckoutStep = (step) => {\n        this.setState({\n            checkout_step: step\n        })\n    }\n\n    getCurrentStep = () => {\n        if(this.state.checkout_step === 0) {\n            return <Checkout_Details updateCheckout={this.updateCheckoutStep} totalAmount={this.state.order_details.orderInfo ? ((this.state.order_details.orderInfo.totalMoney.amount + 4.50) + (this.state.order_details.orderInfo.totalMoney.amount * 0.085)).toFixed(2) : null} />\n        } else if(this.state.checkout_step === 1) {\n            return <Checkout_Billing updateCheckout={this.updateCheckoutStep} />\n        } else {\n            return <Checkout_Payment totalAmount={this.state.order_details.orderInfo ? ((this.state.order_details.orderInfo.totalMoney.amount + 4.00)).toFixed(2) : null} />\n        }\n    }\n\n    render(){\n        return(\n            <Container className=\"pb-5\">\n                <Row className=\"pt-5\">\n                    <Col>\n                        <h1 className=\"h1 text-left\" style={{color: \"white\"}}>Checkout</h1>\n                        <h1 className=\"h5 text-left\" style={{color: \"white\"}}>Hope you found everything you need!</h1>\n                        {/* <Button variant=\"light\" onClick={() => this.getTestCheckout()}>Checkout</Button> */}\n                        {/* <Button variant=\"light\" onClick={() => this.addItemToCart()}>Add Item</Button> */}\n                    </Col>\n                    {/* <Col></Col> */}\n                </Row>\n                <Container className=\"checkout-container p-3 my-3\">\n                    <Row>\n                        <Col lg={6}>\n                            {this.getCurrentStep()}\n                        </Col>\n                        {/* ORDER DETAILS */}\n                        <Col>\n                            <Container id=\"checkout-items\">\n                            {this.state.current_cart.map(product => \n                                <Row key={product.name} className=\"my-4\">\n                                    {/* <Col sm={3}>\n                                        <Image src={product.images[0].url} className=\"cart-image text-center\" height=\"100px\" width=\"200px\" />\n                                    </Col> */}\n                                    <Col>\n                                        <Row>\n                                            <Col>\n                                                <h1 className=\"text-left h2\">{product.name}</h1>\n                                            </Col>\n                                            <Col xs={12} lg={4}>\n                                                <h1 className=\"h4 quantity text-right pr-2\" >Quantity: 1</h1>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col xs={12} lg={12}>\n                                                <h1 className=\"h3 amount text-right pr-2\" >${product.variationTotalPriceMoney.amount}</h1>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Row>\n                            )}\n                            </Container>\n                            <Container id=\"checkout-total\">\n                            <Row>\n                                <Col md={8} lg={9}>\n                                    <h1 className=\"h5 text-right\">Subtotal</h1>\n                                </Col>\n                                <Col>\n                                    <h1 className=\"h5 text-left\">{`$${this.state.order_details === \"\" ? null : (this.state.order_details.orderInfo.totalMoney.amount - this.state.order_details.orderInfo.totalTaxMoney.amount).toFixed(2) }`}</h1>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col md={8} lg={9}>\n                                    <h1 className=\"h5 text-right\">Shipping</h1>\n                                </Col>\n                                <Col>\n                                    <h1 className=\"h5 text-left\">{`$${this.state.order_details === \"\" ? 0 : 4.00.toFixed(2)}`}</h1>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col md={8} lg={9}>\n                                    <h1 className=\"h5 text-right\">Tax</h1>\n                                </Col>\n                                <Col>\n                                    <h1 className=\"h5 text-left\">{`$${this.state.order_details === \"\" ? null : (this.state.order_details.orderInfo.totalTaxMoney.amount).toFixed(2) }`}</h1>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col md={8} lg={9}>\n                                    <h1 className=\"h5 text-right\">Total</h1>\n                                </Col>\n                                <Col>\n                                <h1 className=\"h5 text-left\">{`$${this.state.order_details === \"\" ? null : ((this.state.order_details.orderInfo.totalMoney.amount + 4.00)).toFixed(2) }`}</h1>\n                                </Col>\n                            </Row>\n                            </Container>\n                        </Col>\n                    </Row>\n                </Container>\n            </Container>\n        )\n    }\n}","/Users/ejgonzalez/sbsc/src/Components/Checkout/Checkout_Details.js",["135","136","137","138","139"],"import react, { Component } from 'react'\nimport {Container, Row, Col, Image, Button, Form, ToggleButton} from 'react-bootstrap'\nimport Square from '../../Components/Square/Square';\n\nexport default class Checkout_Details extends Component {\n\n    state = {\n        validated: false,\n        personal_information: [],\n        shippingOption: \"\",\n    }\n\n    handleSubmit = (event) => {\n        const form = event.currentTarget\n\n        let personalInformation = []\n        for(let i = 0; i < event.currentTarget.length - 1; i++){\n            let keyPair = {[event.currentTarget[i].placeholder]: event.currentTarget[i].value}\n            personalInformation.push(keyPair)\n        }\n\n        if (form.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        } else {\n            this.updateCheckoutState()\n        }\n\n        this.setState({\n            validated: true,\n            personal_information: [...personalInformation]\n        }, () => { \n            console.log(this.state.personal_information);\n        })\n        \n    }\n\n    updateCheckoutState = () => {\n        \n        this.props.updateCheckout(1)\n    }\n\n    toggleShipping = (shippingOption) => {\n        let el = document.getElementById(`inline-${shippingOption}`)\n        if(shippingOption === \"Shipping\"){\n            document.getElementById(`inline-Local Pickup`).checked = false;\n            this.setState({\n                shippingOption: shippingOption\n            })\n        } else {\n            document.getElementById(`inline-Shipping`).checked = false;\n            this.setState({\n                shippingOption: shippingOption\n            })\n        }\n\n    }\n\n    render(){\n        return(\n            <Container>\n                <Row className=\"my-3\">\n                    <Col><h1 className=\"text-center checkout-title active\">1. Shipping</h1></Col>\n                    <Col><h1 className=\"text-center checkout-title nonActive\">2. Billing</h1></Col>\n                    <Col><h1 className=\"text-center checkout-title nonActive\">3. Payment</h1></Col>\n                </Row>\n                <Form>\n                    <div key={`inline-checkbox`} className=\"mb-3\">\n                        {[\"Shipping\", \"Local Pickup\" ].map((shippingType) => (\n                            <Form.Check inline label={`${shippingType}`} onClick={() => this.toggleShipping(`${shippingType}`)} type={\"checkbox\"} id={`inline-${shippingType}`} />\n                        ))}\n                    </div>\n                </Form>\n                <Row>\n                    <Col className=\"text-center\">\n                        <h1 className=\"h5\">If no shipping option is chosen defaults to shipping.</h1>\n                    </Col>\n                </Row>\n                <Form noValidate validated={this.state.validated} onSubmit={this.handleSubmit}>\n                    <Form.Row>\n                        <Form.Group as={Col} md=\"6\" className=\"text-left\" controlId=\"validationCustom01\">\n                            <Form.Label className=\"form-label\">First name</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                placeholder=\"First name\"\n                            />\n                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group as={Col} md=\"6\" className=\"text-left\" controlId=\"validationCustom01\">\n                            <Form.Label className=\"form-label\">Last name</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                placeholder=\"Last name\"\n                            />\n                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group as={Col} className=\"text-left\" controlId=\"validationCustom02\">\n                            <Form.Label className=\"form-label\">Address</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                placeholder=\"Address\"\n                            />\n                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group as={Col} className=\"text-left\" controlId=\"validationCustom03\">\n                            <Form.Label className=\"form-label\">City</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                placeholder=\"City\"\n                            />\n                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group as={Col} className=\"text-left\" md=\"6\" controlId=\"validationCustom04\">\n                            <Form.Label className=\"form-label\">State</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                placeholder=\"State\"\n                            />\n                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group as={Col} className=\"text-left\" md=\"6\" controlId=\"validationCustom05\">\n                            <Form.Label className=\"form-label\">Zipcode</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                placeholder=\"Zipcode\"\n                            />\n                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n                    <Row className=\"py-2\">\n                        <Col className=\"text-right\">\n                            <Button type=\"submit\" variant=\"outline-light\">Next</Button>\n                        </Col> \n                    </Row>\n                </Form>\n            </Container>\n        )\n    }\n}","/Users/ejgonzalez/sbsc/src/Components/Checkout/Checkout_Payment.js",["140","141","142","143","144"],"import react, { Component } from 'react';\nimport {Container, Row, Col, Image, Button, Form, ToggleButton} from 'react-bootstrap'\nimport Square from '../../Components/Square/Square';\n\nexport default class Checkout_Payment extends Component {\n\n    render(){\n        return (\n            <Container className=\"py-5\">\n                <Row className=\"my-3\">\n                    <Col><h1 className=\"text-center checkout-title nonActive\">1. Shipping</h1></Col>\n                    {/* <Col xs={1} md={1} lg={1} className=\"circle-seperator\">{String.fromCharCode(9675)}</Col> */}\n                    <Col><h1 className=\"text-center checkout-title nonActive\">2. Billing</h1></Col>\n                    {/* <Col xs={1} md={1} lg={1} className=\"circle-seperator\">{String.fromCharCode(9675)}</Col> */}\n                    <Col><h1 className=\"text-center checkout-title active\">3. Payment</h1></Col>\n                </Row>\n                <Row>\n                    <Square paymentForm={ window.SqPaymentForm } totalAmount={this.props.totalAmount}/>\n                </Row>\n                {/* <div id=\"form-container\">\n                    <div id=\"sq-card-number\"></div>\n                    <div class=\"third\" id=\"sq-expiration-date\"></div>\n                    <div class=\"third\" id=\"sq-cvv\"></div>\n                    <div class=\"third\" id=\"sq-postal-code\"></div>\n                    <button id=\"sq-creditcard\" class=\"button-credit-card\" onclick=\"onGetCardNonce(event)\">Pay $1.00</button>\n                </div> */}\n                {/* <Square paymentForm={ window.SqPaymentForm } totalAmount={this.props.totalAmount}/> */}\n            </Container>\n        )\n    }\n}","/Users/ejgonzalez/sbsc/src/Components/Checkout/Checkout_Billing.js",["145","146","147","148"],"import react, { Component } from 'react'\nimport {Container, Row, Col, Image, Button, Form, ToggleButton} from 'react-bootstrap'\n\nexport default class Checkout_Billing extends Component {\n\n    state = {\n        validated: false,\n        billing_information: [],\n        shippingOption: \"\",\n    }\n\n    handleSubmit = (event) => {\n        const form = event.currentTarget\n        console.log(event.currentTarget[1])\n        if (form.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        } else {\n            this.props.updateCheckout(2)\n        }\n\n        let billingInformation = []\n        for(let i = 0; i < event.currentTarget.length - 1; i++){\n            let keyPair = {[event.currentTarget[i].placeholder]: event.currentTarget[i].value}\n            billingInformation.push(keyPair)\n        }\n        this.setState({\n            validated: true,\n            billing_information: [...billingInformation]\n        }, () => { \n            console.log(this.state.billing_information);\n        })\n        event.preventDefault();\n    }\n\n    toggleShipping = (shippingOption) => {\n        let el = document.getElementById(`inline-${shippingOption}`)\n        if(shippingOption === \"Shipping\"){\n            document.getElementById(`inline-Local Pickup`).checked = false;\n            this.setState({\n                shippingOption: shippingOption\n            })\n        } else {\n            document.getElementById(`inline-Shipping`).checked = false;\n            this.setState({\n                shippingOption: shippingOption\n            })\n        }\n\n    }\n\n    render(){\n        return(\n            <Container>\n                <Row className=\"my-3\">\n                    <Col><h1 className=\"text-center checkout-title nonActive\">1. Shipping</h1></Col>\n                    <Col><h1 className=\"text-center checkout-title active\">2. Billing</h1></Col>\n                    <Col><h1 className=\"text-center checkout-title nonActive\">3. Payment</h1></Col>\n                </Row>\n                <Form>\n                    <div key={`inline-checkbox`} className=\"mb-3\">\n                        {[\"Same as Shipping\", \"Different\" ].map((shippingType) => (\n                            <Form.Check inline label={`${shippingType}`} onClick={() => this.toggleShipping(`${shippingType}`)} type={\"checkbox\"} id={`inline-${shippingType}`} />\n                        ))}\n                    </div>\n                </Form>\n                {/* <Row>\n                    <Col className=\"text-center\">\n                        <h1 className=\"h5\">Defaults to different.</h1>\n                    </Col>\n                </Row> */}\n                <Form noValidate validated={this.state.validated} onSubmit={this.handleSubmit}>\n                    <Form.Row>\n                        <Form.Group as={Col} className=\"text-left\" controlId=\"validationCustom01\">\n                            <Form.Label className=\"form-label\">Full name</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                placeholder=\"Full name\"\n                            />\n                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group as={Col} className=\"text-left\" controlId=\"validationCustom02\">\n                            <Form.Label className=\"form-label\">Address</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                placeholder=\"Address\"\n                            />\n                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group as={Col} className=\"text-left\" controlId=\"validationCustom03\">\n                            <Form.Label className=\"form-label\">City</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                placeholder=\"City\"\n                            />\n                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group as={Col} className=\"text-left\" md=\"6\" controlId=\"validationCustom04\">\n                            <Form.Label className=\"form-label\">State</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                placeholder=\"State\"\n                            />\n                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group as={Col} className=\"text-left\" md=\"6\" controlId=\"validationCustom05\">\n                            <Form.Label className=\"form-label\">Zipcode</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                placeholder=\"Zipcode\"\n                            />\n                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group as={Col} className=\"text-left\" md=\"6\" controlId=\"validationCustom05\">\n                            <Form.Label className=\"form-label\">Phone</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                placeholder=\"Phone\"\n                            />\n                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group as={Col} className=\"text-left\" md=\"6\" controlId=\"validationCustom05\">\n                            <Form.Label className=\"form-label\">Email</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                placeholder=\"Email\"\n                            />\n                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n                    <Row className=\"py-2\">\n                        <Col className=\"text-right\">\n                            <Button type=\"submit\" variant=\"outline-light\">Next</Button>\n                        </Col>\n                    </Row>\n                </Form>\n            </Container>\n        )\n    }\n}","/Users/ejgonzalez/sbsc/src/Components/Square/Square.js",[],"/Users/ejgonzalez/sbsc/src/Components/Square/PaymentForm.js",[],"/Users/ejgonzalez/sbsc/src/Components/SchedulePt/SchedulePt.js",[],"/Users/ejgonzalez/sbsc/src/Components/Schedule1on1/Schedule1on1.js",[],"/Users/ejgonzalez/sbsc/src/Components/Category/Category.js",["149","150","151","152"],"/Users/ejgonzalez/sbsc/src/Components/Product/Product.js",["153","154","155"],{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","severity":1,"message":"161","line":1,"column":8,"nodeType":"162","messageId":"163","endLine":1,"endColumn":13},{"ruleId":"160","severity":1,"message":"164","line":18,"column":15,"nodeType":"162","messageId":"163","endLine":18,"endColumn":22},{"ruleId":"160","severity":1,"message":"165","line":2,"column":30,"nodeType":"162","messageId":"163","endLine":2,"endColumn":35},{"ruleId":"160","severity":1,"message":"161","line":3,"column":8,"nodeType":"162","messageId":"163","endLine":3,"endColumn":13},{"ruleId":"160","severity":1,"message":"166","line":1,"column":8,"nodeType":"162","messageId":"163","endLine":1,"endColumn":13},{"ruleId":"160","severity":1,"message":"165","line":2,"column":30,"nodeType":"162","messageId":"163","endLine":2,"endColumn":35},{"ruleId":"160","severity":1,"message":"167","line":2,"column":37,"nodeType":"162","messageId":"163","endLine":2,"endColumn":43},{"ruleId":"160","severity":1,"message":"168","line":2,"column":45,"nodeType":"162","messageId":"163","endLine":2,"endColumn":49},{"ruleId":"160","severity":1,"message":"169","line":2,"column":51,"nodeType":"162","messageId":"163","endLine":2,"endColumn":63},{"ruleId":"170","severity":1,"message":"171","line":45,"column":20,"nodeType":"172","messageId":"173","endLine":45,"endColumn":279},{"ruleId":"170","severity":1,"message":"174","line":47,"column":20,"nodeType":"172","messageId":"173","endLine":47,"endColumn":81},{"ruleId":"170","severity":1,"message":"175","line":49,"column":20,"nodeType":"172","messageId":"173","endLine":49,"endColumn":173},{"ruleId":"160","severity":1,"message":"166","line":1,"column":8,"nodeType":"162","messageId":"163","endLine":1,"endColumn":13},{"ruleId":"160","severity":1,"message":"165","line":2,"column":30,"nodeType":"162","messageId":"163","endLine":2,"endColumn":35},{"ruleId":"160","severity":1,"message":"169","line":2,"column":51,"nodeType":"162","messageId":"163","endLine":2,"endColumn":63},{"ruleId":"160","severity":1,"message":"176","line":3,"column":8,"nodeType":"162","messageId":"163","endLine":3,"endColumn":14},{"ruleId":"160","severity":1,"message":"177","line":44,"column":13,"nodeType":"162","messageId":"163","endLine":44,"endColumn":15},{"ruleId":"160","severity":1,"message":"166","line":1,"column":8,"nodeType":"162","messageId":"163","endLine":1,"endColumn":13},{"ruleId":"160","severity":1,"message":"165","line":2,"column":30,"nodeType":"162","messageId":"163","endLine":2,"endColumn":35},{"ruleId":"160","severity":1,"message":"167","line":2,"column":37,"nodeType":"162","messageId":"163","endLine":2,"endColumn":43},{"ruleId":"160","severity":1,"message":"168","line":2,"column":45,"nodeType":"162","messageId":"163","endLine":2,"endColumn":49},{"ruleId":"160","severity":1,"message":"169","line":2,"column":51,"nodeType":"162","messageId":"163","endLine":2,"endColumn":63},{"ruleId":"160","severity":1,"message":"166","line":1,"column":8,"nodeType":"162","messageId":"163","endLine":1,"endColumn":13},{"ruleId":"160","severity":1,"message":"165","line":2,"column":30,"nodeType":"162","messageId":"163","endLine":2,"endColumn":35},{"ruleId":"160","severity":1,"message":"169","line":2,"column":51,"nodeType":"162","messageId":"163","endLine":2,"endColumn":63},{"ruleId":"160","severity":1,"message":"177","line":37,"column":13,"nodeType":"162","messageId":"163","endLine":37,"endColumn":15},{"ruleId":"160","severity":1,"message":"178","line":1,"column":10,"nodeType":"162","messageId":"163","endLine":1,"endColumn":16},{"ruleId":"160","severity":1,"message":"167","line":3,"column":38,"nodeType":"162","messageId":"163","endLine":3,"endColumn":44},{"ruleId":"160","severity":1,"message":"179","line":19,"column":13,"nodeType":"162","messageId":"163","endLine":19,"endColumn":16},{"ruleId":"180","severity":1,"message":"181","line":43,"column":49,"nodeType":"182","messageId":"183","endLine":43,"endColumn":57},{"ruleId":"160","severity":1,"message":"178","line":1,"column":10,"nodeType":"162","messageId":"163","endLine":1,"endColumn":16},{"ruleId":"160","severity":1,"message":"184","line":6,"column":8,"nodeType":"162","messageId":"163","endLine":6,"endColumn":18},{"ruleId":"160","severity":1,"message":"179","line":17,"column":13,"nodeType":"162","messageId":"163","endLine":17,"endColumn":16},"no-native-reassign",["185"],"no-negated-in-lhs",["186"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'context' is assigned a value but never used.","'Image' is defined but never used.","'react' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'ToggleButton' is defined but never used.","react/jsx-pascal-case","Imported JSX component Checkout_Details must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component Checkout_Billing must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Checkout_Payment must be in PascalCase or SCREAMING_SNAKE_CASE","'Square' is defined but never used.","'el' is assigned a value but never used.","'render' is defined but never used.","'res' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd","'ShopHelper' is defined but never used.","no-global-assign","no-unsafe-negation"]